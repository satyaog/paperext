{
  "paper": "94a1abcda4ae84576cca79d0fcedc40d.txt",
  "words": 11839,
  "extractions": {
    "title": {
      "value": "Towards a General Recipe for Combinatorial Optimization with Multi-Filter GNNs",
      "justification": "The title directly reflects the content of the paper, which introduces and discusses the GCON model for combinatorial optimization using Multi-Filter GNNs.",
      "quote": "F. Wenkel et al., Towards a General Recipe for Combinatorial Optimization with Multi-Filter GNNs. Proceedings of the Third Learning on Graphs Conference (LoG 2024), PMLR 269, Virtual Event, November 26–29, 2024."
    },
    "description": "This paper introduces GCON, a novel graph neural network architecture that leverages complex filter banks and localized attention mechanisms for combinatorial optimization problems on graphs. The authors demonstrate its effectiveness on tasks such as maximum cut, minimum dominating set, and maximum clique, comparing it against other GNN-based approaches and solvers like Gurobi.",
    "type": {
      "value": "empirical",
      "justification": "The paper evaluates the GCON architecture on various combinatorial optimization tasks and provides empirical results demonstrating its performance.",
      "quote": "We evaluate GCON on a variety of graph-CO problems on synthetic graph benchmarks, and demonstrate that our architecture is highly performant."
    },
    "primary_research_field": {
      "name": {
        "value": "Graph Neural Networks",
        "justification": "The paper focuses on developing a new GNN architecture, GCON, specifically for solving combinatorial optimization problems.",
        "quote": "Here, we introduce GCON, a novel GNN architecture that leverages a complex filter bank and localized attention mechanisms to solve CO problems on graphs."
      },
      "aliases": []
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Combinatorial Optimization",
          "justification": "The application domain of GCON is combinatorial optimization, as it solves problems such as maximum cut, minimum dominating set, and maximum clique.",
          "quote": "Here, we consider leveraging GNNs to solve combinatorial optimization (CO) problems, a somewhat less explored yet emerging application area of graph learning."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "GCON",
          "justification": "GCON is the main contribution of the paper, a novel GNN architecture for combinatorial optimization.",
          "quote": "To address these challenges, we propose the Graph Combinatorial Optimization Network (GCON), a novel GNN that uses a hybrid filter bank consisting of both..."
        },
        "aliases": [],
        "is_contributed": {
          "value": true,
          "justification": "GCON is introduced and developed as a new model in this paper.",
          "quote": "To address these challenges, we propose the Graph Combinatorial Optimization Network (GCON), a novel GNN..."
        },
        "is_executed": {
          "value": true,
          "justification": "GCON was empirically evaluated on various tasks throughout the paper, as evidenced by the experiments section.",
          "quote": "We evaluate GCON on a variety of graph-CO problems on synthetic graph benchmarks, and demonstrate that our architecture is highly performant."
        },
        "is_compared": {
          "value": true,
          "justification": "GCON's performance is compared to various other methods, including Gurobi and other GNN-based models.",
          "quote": "GCON is competitive across all tasks and consistently outperforms other specialized GNN-based approaches, and is on par with the powerful Gurobi solver on the max-cut problem."
        },
        "referenced_paper_title": {
          "value": "Towards a General Recipe for Combinatorial Optimization with Multi-Filter GNNs",
          "justification": "As the main contribution, the model is part of this paper's content.",
          "quote": "To address these challenges, we propose the Graph Combinatorial Optimization Network (GCON), a novel GNN..."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Barabási–Albert (BA) graphs",
          "justification": "This dataset is used for evaluating GCON on maximum cut and minimum dominating set problems, as mentioned in the experiments section.",
          "quote": "For MDS and maximum cut, we follow Zhang et al. [41] and Sun et al. [30], generating Barabási–Albert (BA) graphs [2]..."
        },
        "aliases": [
          "BA graphs"
        ],
        "role": "used",
        "referenced_paper_title": {
          "value": "Emergence of scaling in random networks",
          "justification": "The dataset is referenced as part of the baseline model comparisons in the experiments and cited from Barabási and Albert's paper.",
          "quote": "For MDS and maximum cut, we follow Zhang et al. [41] and Sun et al. [30], generating Barabási–Albert (BA) graphs [2]..."
        }
      },
      {
        "name": {
          "value": "RB Model",
          "justification": "The RB model is used for generating synthetic graphs to evaluate the maximum clique problem.",
          "quote": "For the maximum clique problem, we use the RB model from Xu et al. [38] to generate challenging synthetic graphs as proposed by Karalias and Loukas [18]."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Random constraint satisfaction: Easy generation of hard (satisfiable) instances",
          "justification": "The dataset's reference is given from Xu et al. and is used in generating data for testing the proposed models.",
          "quote": "For the maximum clique problem, we use the RB model from Xu et al. [38] to generate challenging synthetic graphs..."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch Geometric",
          "justification": "The experiments are built on the PyTorch Geometric framework, providing necessary tools for graph neural network processing.",
          "quote": "Our experimental framework is built on PyTorch Geometric [12] and GraphGym [40]."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Fast graph representation learning with PyTorch Geometric",
          "justification": "PyTorch Geometric is referenced for its utility in implementing the experimental framework.",
          "quote": "Our experimental framework is built on PyTorch Geometric [12]..."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1185,
    "prompt_tokens": 21175,
    "total_tokens": 22360,
    "completion_tokens_details": {
      "accepted_prediction_tokens": null,
      "audio_tokens": 0,
      "reasoning_tokens": 0,
      "rejected_prediction_tokens": null
    },
    "prompt_tokens_details": {
      "audio_tokens": 0,
      "cached_tokens": 0
    }
  }
}