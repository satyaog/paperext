{
  "paper": "803ab888a9275bf98ed64947c39fbc38.txt",
  "words": 13096,
  "extractions": {
    "title": {
      "value": "Memory-Aware Functional IR for Higher-Level Synthesis of Accelerators",
      "justification": "The title is explicitly mentioned at the beginning of the paper and summarizes the main focus on memory-aware IR for synthesizing accelerators.",
      "quote": "Memory-Aware Functional IR for Higher-Level Synthesis of Accelerators"
    },
    "description": "This paper introduces Shir, a memory-aware multi-level intermediate representation (IR) specifically designed for synthesizing high-performance hardware accelerators on FPGAs. Shir focuses on representing memory operations explicitly in its IR to fully exploit on-chip and off-chip memory features. By demonstrating transformations and compiling high-level algorithmic descriptions into VHDL for FPGA deployment, it achieves better hardware performance compared to other approaches like OpenCL. The paper evaluates Shir on stencil computations and matrix-matrix multiplication on an Intel Arria 10 FPGA.",
    "type": {
      "value": "empirical",
      "justification": "The research presents empirical evaluations of the Shir IR on real FPGA hardware, demonstrating its effectiveness in practical scenarios.",
      "quote": "The viability of this approach is demonstrated on two stencil computations and by exploring the optimization space of matrix-matrix multiplication. Starting from a high-level representation for these algorithms, our compiler produces low-level VHDL (VHSIC Hardware Description Language) code automatically."
    },
    "primary_research_field": {
      "name": {
        "value": "Hardware Acceleration",
        "justification": "The central focus of the paper is on designing specialized accelerators and optimizing their synthesis for hardware performance through a novel IR.",
        "quote": "Specialized accelerators deliver orders of a magnitude of higher performance than general-purpose processors."
      },
      "aliases": []
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "FPGA Synthesis",
          "justification": "The paper extensively discusses compiling high-level specifications into VHDL code for FPGAs, specifically leveraging the capabilities of Intel Arria 10 FPGA.",
          "quote": "Our results shows that the Shir compiler produces correct and efficient hardware that is competitive with OpenCL implementations."
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Functional Programming for Hardware",
          "justification": "Shir uses functional programming concepts to develop its IR for hardware synthesis.",
          "quote": "This article adopts functional programming concepts to provide a hardware-agnostic higher-level programming abstraction."
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Memory Optimization",
          "justification": "Memory operations and optimization form a significant part of the IR design, essential for efficient accelerator synthesis.",
          "quote": "This novel IR expresses different forms of parallelism and standard memory features such as asynchronous off-chip memories or synchronous on-chip buffers."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "Shir",
          "justification": "Shir is the central model introduced in the paper, serving as the multi-level IR used for hardware synthesis.",
          "quote": "This article presents Shir, a multi-level IR inspired by Lift-hls and Aetherling."
        },
        "aliases": [],
        "is_contributed": {
          "value": true,
          "justification": "Shir is a novel contribution by the authors as an improved IR for efficient accelerator design.",
          "quote": "This article presents Shir, a multi-level IR inspired by Lift-hls and Aetherling."
        },
        "is_executed": {
          "value": true,
          "justification": "Shir is executed on FPGA hardware in this study to demonstrate its effectiveness in synthesizing accelerators.",
          "quote": "The viability of this approach is demonstrated on two stencil computations and by exploring the optimization space of matrix-matrix multiplication."
        },
        "is_compared": {
          "value": true,
          "justification": "Shir is compared with OpenCL implementations to demonstrate its competitiveness in performance.",
          "quote": "This article also shows that the designs produced are competitive with highly tuned OpenCL implementations and outperform hardware-agnostic OpenCL code."
        },
        "referenced_paper_title": {
          "value": "High-level synthesis of functional patterns with lift",
          "justification": "Shir is inspired by Lift-hls, which in turn relates to the referenced Lift-based synthesis approach.",
          "quote": "This article presents Shir, a multi-level IR inspired by Lift-hls and Aetherling."
        }
      }
    ],
    "datasets": [],
    "libraries": [
      {
        "name": {
          "value": "OpenCL",
          "justification": "OpenCL is used as a reference point for comparing the performance of Shir-generated hardware.",
          "quote": "This article also shows that the designs produced are competitive with highly tuned OpenCL implementations and outperform hardware-agnostic OpenCL code."
        },
        "aliases": [],
        "role": "referenced",
        "referenced_paper_title": {
          "value": "FPGA programming for the masses",
          "justification": "The paper uses OpenCL as a baseline for comparisons, impacting performance evaluations.",
          "quote": "...and outperform hardware-agnostic OpenCL code."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 912,
    "prompt_tokens": 21130,
    "total_tokens": 22042,
    "completion_tokens_details": {
      "accepted_prediction_tokens": null,
      "audio_tokens": 0,
      "reasoning_tokens": 0,
      "rejected_prediction_tokens": null
    },
    "prompt_tokens_details": {
      "audio_tokens": 0,
      "cached_tokens": 1152
    }
  }
}