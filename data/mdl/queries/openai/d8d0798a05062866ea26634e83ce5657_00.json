{
  "paper": "d8d0798a05062866ea26634e83ce5657.txt",
  "words": 12492,
  "extractions": {
    "title": {
      "value": "Connectome-based reservoir computing with the conn2res toolbox",
      "justification": "The title directly indicates the focus of the paper, which is on connectome-based reservoir computing and introduces the conn2res toolbox.",
      "quote": "Connectome-based reservoir computing with the conn2res toolbox"
    },
    "description": "This paper introduces the conn2res toolbox, which is a Python library for implementing biological neural networks as reservoir computers. It focuses on using connectomes to map network structures to computational functions, aiming to link neural architecture with cognitive and behavioral functions.",
    "type": {
      "value": "theoretical",
      "justification": "The paper primarily discusses the theoretical framework of reservoir computing and how it can be related to brain networks using the conn2res toolbox. It focuses on the principles of RC and its application to neural circuits.",
      "quote": "Here we review the fundamentals of reservoir computing and how it can be applied to gain mechanistic insight about the information processing of biological neural circuits."
    },
    "primary_research_field": {
      "name": {
        "value": "Reservoir Computing",
        "justification": "The paper revolves around the reservoir computing paradigm and how it connects with brain networks using the conn2res toolbox.",
        "quote": "Artificial intelligence offers alternative ways to approach the link between structure and function in brain networks that take into account computation...reservoir computing makes it possible to describe how recurrent neural circuits extract information from a continuous stream of external stimuli."
      },
      "aliases": [
        "RC"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Connectomics",
          "justification": "The conn2res toolbox is used to implement connectomes as reservoirs, making connectomics a key part of the research.",
          "quote": "conn2res: an open-source Python toolbox for implementing biological neural networks as artificial neural networks. conn2res is modular, allowing arbitrary network architecture and dynamics to be imposed. The toolbox allows researchers to input connectomes reconstructed using multiple techniques."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "echo-state network",
          "justification": "The paper references the echo-state network as a type of model used in reservoir computing.",
          "quote": "Reservoir computing (RC) is an umbrella term that unifies two computational paradigms, liquid state machines and echo-state networks."
        },
        "aliases": [],
        "is_contributed": {
          "value": false,
          "justification": "The paper does not claim the development of the echo-state network as its contribution.",
          "quote": "Reservoir computing (RC) is an umbrella term that unifies two computational paradigms, liquid state machines and echo-state networks."
        },
        "is_executed": {
          "value": true,
          "justification": "The echo-state network is implemented and tested using the conn2res toolbox as part of the research work.",
          "quote": "To do so, we implement an echo-state network whose connections are constrained by a human consensus connectome reconstructed from diffusion-weighted MRI data."
        },
        "is_compared": {
          "value": true,
          "justification": "The echo-state network's performance is evaluated in the context of different tasks and network dynamics, implying numerical comparison of its performance.",
          "quote": "Results in Fig. 4 suggest that both local and global network dynamics have an impact on task performance."
        },
        "referenced_paper_title": {
          "value": "The “echo state” approach to analysing and training recurrent neural networks-with an erratum note",
          "justification": "This paper is referenced as outlining the concept of echo-state networks, and is listed in the references of the research.",
          "quote": "Jaeger, H. The “echo state” approach to analysing and training recurrent neural networks-with an erratum note."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "human consensus connectome",
          "justification": "The dataset refers to connectome data obtained from diffusion-weighted MRI of 66 subjects, explicitly used in the paper.",
          "quote": "To do so, we implement an echo-state network whose connections are constrained by a human consensus connectome reconstructed from diffusion-weighted MRI data."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Structural and functional connectome from 70 young healthy adults",
          "justification": "This is the source of the human consensus connectome data outlined in the dataset description.",
          "quote": "Data source: https://doi.org/10.5281/zenodo.2872624."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "NumPy",
          "justification": "NumPy is listed as one of the libraries used in the conn2res toolbox.",
          "quote": "The toolbox is built on top of the following well established, documented and maintained Python package dependencies: NumPy."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "The NumPy array: a structure for efficient numerical computation",
          "justification": "A reference is provided for NumPy, indicating its use in the toolbox.",
          "quote": "Walt, Svd, Colbert, S. C. & Varoquaux, G. The NumPy array: a structure for efficient numerical computation."
        }
      },
      {
        "name": {
          "value": "Scikit-Learn",
          "justification": "Scikit-Learn is mentioned as used for linear model estimation in the paper's readout module.",
          "quote": "Linear model: specified as an instance of a linear model estimator from the Scikit-Learn library to be implemented for learning by the readout module."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Scikit-learn: Machine learning in Python",
          "justification": "A reference to Scikit-Learn indicates its involvement in the project.",
          "quote": "Pedregosa, F. et al. Scikit-learn: Machine learning in Python."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1110,
    "prompt_tokens": 23014,
    "total_tokens": 24124,
    "completion_tokens_details": {
      "accepted_prediction_tokens": null,
      "audio_tokens": 0,
      "reasoning_tokens": 0,
      "rejected_prediction_tokens": null
    },
    "prompt_tokens_details": {
      "audio_tokens": 0,
      "cached_tokens": 1152
    }
  }
}