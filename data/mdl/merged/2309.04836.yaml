title:
  value: Neural Semantic Surface Maps
  justification: 'The title precisely encapsulates the core method and contribution described in the paper: using neural networks
    to create semantic surface maps.'
  quote: We present an automated technique for computing a map between two genus-zero shapes, which matches semantically corresponding
    regions to one another.
description: This paper presents an automated method for computing semantic mappings between pairs of genus-zero 3D shapes,
  optimizing semantic correspondences using features distilled from pre-trained vision transformers (ViT).
type:
  value: empirical
  justification: The paper describes empirical experiments to validate the proposed method, including quantitative and qualitative
    evaluations.
  quote: Through quantitative and qualitative experiments, we evaluate our ability to match upright object pairs with varying
    levels of isometry for objects from the same semantic class and across different ones.
primary_research_field:
  name:
    value: Computer Vision
    justification: The paper focuses on using vision transformers and image-based correspondences to compute maps between
      3D shapes.
    quote: To overcome the lack of annotated training data, we distill semantic matches from pre-trained vision models.
  aliases: []
sub_research_fields:
- name:
    value: Shape Analysis and Semantic Correspondence
    justification: The core contribution of the paper deals with analyzing shapes to identify semantically corresponding regions
      and creating maps from these correspondences.
    quote: Our core contribution is an approach for computing a semantic map that matches semantically corresponding points
      to one another.
  aliases: []
- name:
    value: Shape Matching
    justification: The main focus of the paper is on computing correspondences between 3D shapes, which falls under the category
      of shape matching.
    quote: In this work, we propose an automatic method to compute a continuous correspondence between two genus-zero surfaces,
      represented as meshes.
  aliases: []
models:
- name:
    value: Neural Surface Maps
    justification: The paper leverages and extends NSM for optimizing seamless maps between shapes.
    quote: Specifically, given the fuzzy matches, we utilize Neural Surface Maps (NSM) to optimize a map between two surfaces.
  aliases:
  - NSM
  is_contributed:
    value: false
    justification: Role:['contributed', 'used', 'referenced']
    quote: used
  is_executed:
    value: false
    justification: ModelMode:['trained', 'fine-tuned', 'inference']
    quote: inference
  is_compared:
    value: false
    justification: ''
    quote: ''
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: Dino-ViT2
    justification: ''
    quote: ''
  aliases: []
  is_contributed:
    value: false
    justification: Role:['contributed', 'used', 'referenced']
    quote: ''
  is_executed:
    value: true
    justification: ModelMode:['trained', 'fine-tuned', 'inference']
    quote: ''
  is_compared:
    value: false
    justification: ''
    quote: ''
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
datasets:
- name:
    value: 3DBiCar
    justification: Used to evaluate the method's robustness to textured shapes.
    quote: We use FAUST, SCAPE, and TOSCA. To ablate the effects of rendering settings and rotation, we use FAUST; 3DBiCar,
      which comprise a variety of textured shapes; and SHREC15, which contain significant nonisometric-variations, with manually-annotated
      sparse correspondences.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: FAUST
    justification: "Used to evaluate the method\u2019s performance on isometric deformations."
    quote: We randomly select 30 pairs from FAUST, containing isometric deformations and pose variations of human shapes.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: SCAPE
    justification: Used to evaluate method performance considering pose variations.
    quote: We use FAUST, SCAPE, and TOSCA. To ablate the effects of rendering settings and rotation, we use FAUST; 3DBiCar,
      which comprise a variety of textured shapes; and SHREC15, which contain significant nonisometric-variations, with manually-annotated
      sparse correspondences.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: SHREC07
    justification: "Used to evaluate method\u2019s performance on non-isometric deformations."
    quote: We choose 30 random same-category shape pairs from SHREC07, containing non-isometric deformations across multiple
      categories of shapes.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: SHREC15
    justification: Used to evaluate the method's robustness to non-isometric variations with manual annotations.
    quote: We use FAUST, SCAPE, and TOSCA. To ablate the effects of rendering settings and rotation, we use FAUST; 3DBiCar,
      which comprise a variety of textured shapes; and SHREC15, which contain significant nonisometric-variations, with manually-annotated
      sparse correspondences.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: SHREC19
    justification: "Used to evaluate method\u2019s performance across a mix of isometric and non-isometric deformations."
    quote: We also extract 30 random shape pairs among the listed test set of SHREC19 from Dyke et al., containing a mix of
      isometric and non-isometric deformations.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: TOSCA
    justification: Used to evaluate method performance considering pose variations.
    quote: We use FAUST, SCAPE, and TOSCA. To ablate the effects of rendering settings and rotation, we use FAUST; 3DBiCar,
      which comprise a variety of textured shapes; and SHREC15, which contain significant nonisometric-variations, with manually-annotated
      sparse correspondences.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
libraries:
- name:
    value: PyTorch
    justification: Used for implementing the neural network and optimization components of the method.
    quote: "The resultant optimization problem is solved using gradient descent, simply through PyTorch\u2019s SGD optimizer."
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
