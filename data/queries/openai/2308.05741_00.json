{
  "paper": "2308.05741.txt",
  "words": 7824,
  "extractions": {
    "title": {
      "value": "Neural Progressive Meshes",
      "justification": "The title is clearly stated at the beginning of the paper.",
      "quote": "Neural Progressive Meshes YUN-CHUN CHEN, University of Toronto, Canada VLADIMIR G. KIM, Adobe Research, USA NOAM AIGERMAN, Adobe Research, USA ALEC JACOBSON, Adobe Research, University of Toronto, Canada"
    },
    "description": "This paper presents a framework that learns a progressive compressed representation of 3D meshes for efficient transmission. The proposed method utilizes a subdivision-based encoder-decoder architecture to compress high-resolution meshes into a representation that can be progressively transmitted to a client, allowing for real-time improvements in reconstruction quality.",
    "type": {
      "value": "Empirical",
      "justification": "The study evaluates the proposed method using quantitative metrics and comparisons to several baseline methods, conducting multiple experiments.",
      "quote": "We evaluate our method on a diverse set of complex 3D shapes and demonstrate that it outperforms baselines in terms of compression ratio and reconstruction quality."
    },
    "primary_research_field": {
      "name": {
        "value": "Computer Vision",
        "justification": "The paper deals with the compression and transmission of 3D meshes, which falls under the domain of computer vision.",
        "quote": "arXiv:2308.05741v1 [cs.CV] 10 Aug 2023"
      },
      "aliases": []
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "3D Reconstruction",
          "justification": "The study focuses on the reconstruction of 3D meshes using a progressive transmission framework.",
          "quote": "We present a framework that learns a progressive compressed representation of meshes for transmission purposes."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "Neural Progressive Mesh",
          "justification": "The core model introduced and evaluated in the paper is referred to as Neural Progressive Mesh.",
          "quote": "We present a framework that learns a progressive compressed representation of meshes for transmission purposes."
        },
        "aliases": [],
        "is_contributed": {
          "value": true,
          "justification": "Role:['contributed', 'used', 'referenced']",
          "quote": "contributed"
        },
        "is_executed": {
          "value": true,
          "justification": "ModelMode:['trained', 'fine-tuned', 'inference']",
          "quote": "trained"
        },
        "is_compared": {
          "value": true,
          "justification": "",
          "quote": ""
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      },
      {
        "name": {
          "value": "SubdivNet",
          "justification": "SubdivNet is used as a base model for the encoder in the proposed framework.",
          "quote": "The server first uses TetWild to preprocess it and then uses a subdivision-based encoder adapted from SubdivNet."
        },
        "aliases": [],
        "is_contributed": {
          "value": false,
          "justification": "Role:['contributed', 'used', 'referenced']",
          "quote": "used"
        },
        "is_executed": {
          "value": false,
          "justification": "ModelMode:['trained', 'fine-tuned', 'inference']",
          "quote": "trained"
        },
        "is_compared": {
          "value": false,
          "justification": "",
          "quote": ""
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      },
      {
        "name": {
          "value": "Neural Subdivision",
          "justification": "Neural Subdivision is used as a base model for the decoder in the proposed framework.",
          "quote": "The client uses a subdivision-based decoder adapted from Neural Subdivision to reconstruct a high-resolution mesh."
        },
        "aliases": [],
        "is_contributed": {
          "value": false,
          "justification": "Role:['contributed', 'used', 'referenced']",
          "quote": "used"
        },
        "is_executed": {
          "value": false,
          "justification": "ModelMode:['trained', 'fine-tuned', 'inference']",
          "quote": "trained"
        },
        "is_compared": {
          "value": false,
          "justification": "",
          "quote": ""
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Thingi10K",
          "justification": "The dataset is used to evaluate the proposed method in terms of reconstruction quality and compression effectiveness.",
          "quote": "We evaluate our network on the Thingi10K dataset, split into the training, validation, and test sets."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch",
          "justification": "The PyTorch library is used for implementing and training the model.",
          "quote": "We train our network using the ADAM optimizer in PyTorch."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1001,
    "prompt_tokens": 14157,
    "total_tokens": 15158
  }
}