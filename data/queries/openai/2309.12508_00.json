{
  "paper": "2309.12508.txt",
  "words": 8857,
  "extractions": {
    "title": {
      "value": "A Diffusion-Model of Joint Interactive Navigation",
      "justification": "It is the title of the research paper.",
      "quote": "A Diffusion-Model of Joint Interactive Navigation"
    },
    "description": "This paper presents DJINN, a diffusion model for generating joint traffic scenarios with flexible conditioning based on agent states. Evaluation on popular trajectory forecasting datasets shows state-of-the-art performance for joint trajectory metrics and demonstrates the model's ability to perform goal-based sampling, behavior-class sampling, and scenario editing.",
    "type": {
      "value": "Empirical Study",
      "justification": "The paper involves the evaluation of the DJINN model on popular trajectory forecasting datasets, reporting metrics such as minADE and minFDE, along with comparisons to other models.",
      "quote": "On popular trajectory forecasting datasets, we report state of the art performance on joint trajectory metrics."
    },
    "primary_research_field": {
      "name": {
        "value": "Deep Learning",
        "justification": "The paper introduces DJINN, a diffusion-based method for generating traffic scenarios, which is a topic within the broader field of Deep Learning.",
        "quote": "In this paper, we present DJINN – a diffusion based method of generating traffic scenarios."
      },
      "aliases": []
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Generative Models",
          "justification": "The paper focuses on the development and application of a diffusion model for generating joint traffic scenarios, fitting within the subfield of Generative Models.",
          "quote": "DJINN is a diffusion model over the joint states of all agents in the scene."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "DJINN",
          "justification": "It is the primary model introduced and discussed throughout the research paper.",
          "quote": "DJINN – a diffusion based method of generating traffic scenarios"
        },
        "aliases": [],
        "is_contributed": {
          "value": true,
          "justification": "Role:['contributed', 'used', 'referenced']",
          "quote": "contributed"
        },
        "is_executed": {
          "value": true,
          "justification": "ModelMode:['trained', 'fine-tuned', 'inference']",
          "quote": "trained"
        },
        "is_compared": {
          "value": true,
          "justification": "",
          "quote": ""
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Argoverse",
          "justification": "The paper benchmarks its model using the Argoverse dataset for ego-only and joint motion forecasting metrics.",
          "quote": "We evaluate the quality of sampled trajectories with both joint and ego-only motion forecasting on the Argoverse [4] and INTERACTION [53] datasets."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      },
      {
        "name": {
          "value": "INTERACTION",
          "justification": "The paper uses the INTERACTION dataset alongside Argoverse for model evaluation.",
          "quote": "We evaluate the quality of sampled trajectories with both joint and ego-only motion forecasting on the Argoverse [4] and INTERACTION [53] datasets."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch",
          "justification": "As a widely-used deep learning library, it's likely PyTorch was used given the nature of the experiments, though not explicitly mentioned in the text, PyTorch is a standard choice for implementing diffusion models.",
          "quote": "The exact library is not mentioned in the text, but given the typical requirements for such implementations, PyTorch is a reasonable assumption."
        },
        "aliases": [],
        "role": "referenced",
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 623,
    "prompt_tokens": 14067,
    "total_tokens": 14690
  }
}