{
  "paper": "cde41bfd4050117a7c996329db1d521c.txt",
  "words": 8073,
  "extractions": {
    "title": {
      "value": "Parameter-space ReSTIR for Differentiable and Inverse Rendering",
      "justification": "The title provided in the document is 'Parameter-space ReSTIR for Differentiable and Inverse Rendering', which reflects the main focus of the paper on developing a ReSTIR-based differentiable rendering algorithm.",
      "quote": "Parameter-space ReSTIR for Differentiable and Inverse Rendering"
    },
    "description": "The paper discusses an adaptation of the ReSTIR algorithm for differentiable rendering, aimed at improving inverse rendering by efficiently reusing samples across gradient descent iterations. It introduces a parameter-space formulation that minimizes gradient error and speeds up convergence for complex direct lighting and material textures.",
    "type": {
      "value": "empirical",
      "justification": "The research involves the implementation and evaluation of the ReSTIR-based algorithm for differentiable rendering, comparing its performance with existing methods.",
      "quote": "We implemented our method on top of a direct lighting integrator in Mitsuba 3 [Jakob et al. 2022b], using its GPU backend."
    },
    "primary_research_field": {
      "name": {
        "value": "Differentiable Rendering",
        "justification": "The paper's primary focus is on developing and improving differentiable rendering algorithms for efficient inverse rendering.",
        "quote": "keywords: differentiable rendering, inverse rendering"
      },
      "aliases": [
        "Inverse Rendering"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Rendering",
          "justification": "The paper directly deals with rendering techniques, specifically differentiable and inverse rendering.",
          "quote": "• Parameter-Space Differentiable Rendering (Sec. 2)"
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Monte Carlo Methods",
          "justification": "The paper involves Monte Carlo techniques for rendering derivatives and optimizing textures.",
          "quote": "Monte Carlo rendering algorithms typically output an image by estimating the above integral per pixel j."
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Image Synthesis",
          "justification": "The focus on inverse rendering to optimize and synthesize images fits the domain of image synthesis.",
          "quote": "Forward rendering techniques synthesize images by estimating intensities I j for pixels j."
        },
        "aliases": []
      }
    ],
    "models": [],
    "datasets": [],
    "libraries": [
      {
        "name": {
          "value": "Mitsuba 3",
          "justification": "Mitsuba 3 is explicitly mentioned as the integrator on which the proposed method is implemented and evaluated.",
          "quote": "We implemented our method on top of a direct lighting integrator in Mitsuba 3 [Jakob et al. 2022b], using its GPU backend."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Dr.Jit: A Just-In-Time Compiler for Differentiable Rendering",
          "justification": "The Mitsuba 3 renderer is associated with the publication 'Dr.Jit: A Just-In-Time Compiler for Differentiable Rendering'.",
          "quote": "Wenzel Jakob, Sébastien Speierer, Nicolas Roussel, and Delio Vicini. 2022a. Dr.Jit: A Just-In-Time Compiler for Differentiable Rendering."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 598,
    "prompt_tokens": 14577,
    "total_tokens": 15175,
    "completion_tokens_details": null,
    "prompt_tokens_details": null
  }
}