{
  "paper": "2206.09021.txt",
  "words": 9026,
  "extractions": {
    "title": {
      "value": "Conditional Permutation Invariant Flows",
      "justification": "It's the title of the paper.",
      "quote": "Conditional Permutation Invariant Flows"
    },
    "description": "This paper presents a novel, conditional generative probabilistic model of set-valued data with tractable log density. The model is a continuous normalizing flow governed by permutation equivariant dynamics, driven by learnable per-set-element and pairwise interactions. Applications include complex traffic scene generation and object bounding box generation.",
    "type": {
      "value": "Empirical",
      "justification": "The paper provides experimental results demonstrating the performance of the proposed model on various tasks, indicating an empirical approach.",
      "quote": "We demonstrate our conditional permutation invariant flow on two difficult conditional density estimation tasks: realistic traffic scene generation (Fig. 1) given a map and bounding box prediction given an image."
    },
    "primary_research_field": {
      "name": {
        "value": "Generative Models",
        "justification": "The paper focuses on a novel generative probabilistic model for set-valued data.",
        "quote": "We present a novel, conditional generative probabilistic model of set-valued data with a tractable log density."
      },
      "aliases": [
        "Generative Modeling"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Normalizing Flows",
          "justification": "The model described is a type of normalizing flow, specifically continuous normalizing flows.",
          "quote": "This model is a continuous normalizing flow governed by permutation equivariant dynamics."
        },
        "aliases": [
          "Continuous Normalizing Flows"
        ]
      },
      {
        "name": {
          "value": "Computer Vision",
          "justification": "One of the applications of the model is object bounding box generation, which is a task in computer vision.",
          "quote": "Applications include ... object bounding box generation conditioned directly on images."
        },
        "aliases": []
      }
    ],
    "models": [
      {
        "name": {
          "value": "Conditional Permutation Invariant Flow",
          "justification": "The Conditional Permutation Invariant Flow is the primary contribution of this research paper.",
          "quote": "We present a novel, conditional generative probabilistic model of set-valued data with a tractable log density."
        },
        "aliases": [
          "PIF"
        ],
        "is_contributed": {
          "value": 1,
          "justification": "The Conditional Permutation Invariant Flow is the primary contribution of this research paper.",
          "quote": "We present a novel, conditional generative probabilistic model of set-valued data with a tractable log density."
        },
        "is_executed": {
          "value": 1,
          "justification": "The models were executed as the paper includes experimental results showing the performance of the Conditional Permutation Invariant Flow.",
          "quote": "We demonstrate our conditional permutation invariant flow on two difficult conditional density estimation tasks: realistic traffic scene generation (Fig. 1) given a map and bounding box prediction given an image."
        },
        "is_compared": {
          "value": 1,
          "justification": "The paper compares the performance of the Conditional Permutation Invariant Flow against several baselines and ablations.",
          "quote": "We compare our conditional flows against several baselines. Three are non-permutation invariant flows: a unimodal Gaussian model, a RealNVP based model [9], and a “vanilla” continuous normalizing flow (“CNF”)."
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "",
          "quote": ""
        }
      },
      {
        "name": {
          "value": "RealNVP",
          "justification": "RealNVP is a baseline model used for comparison.",
          "quote": "We compare our conditional flows against several baselines. Three are non-permutation invariant flows: a unimodal Gaussian model, a RealNVP based model [9], and a “vanilla” continuous normalizing flow (“CNF”)."
        },
        "aliases": [],
        "is_contributed": {
          "value": 0,
          "justification": "RealNVP is a baseline model used for comparison.",
          "quote": "We compare our conditional flows against several baselines. Three are non-permutation invariant flows: a unimodal Gaussian model, a RealNVP based model [9], and a “vanilla” continuous normalizing flow (“CNF”)."
        },
        "is_executed": {
          "value": 1,
          "justification": "The RealNVP model is executed for baseline comparisons.",
          "quote": "We compare our conditional flows against several baselines."
        },
        "is_compared": {
          "value": 1,
          "justification": "RealNVP is compared against the proposed Conditional Permutation Invariant Flow.",
          "quote": "We compare our conditional flows against several baselines. Three are non-permutation invariant flows: a unimodal Gaussian model, a RealNVP based model [9], and a “vanilla” continuous normalizing flow (“CNF”)."
        },
        "referenced_paper_title": {
          "value": "Density estimation using Real NVP",
          "justification": "The paper is used as a baseline comparison, and it is cited in the context where it is mentioned.",
          "quote": "We compare our conditional flows against several baselines. Three are non-permutation invariant flows: a unimodal Gaussian model, a RealNVP based model [9], and a “vanilla” continuous normalizing flow (“CNF”)."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "INTERACTION dataset",
          "justification": "The dataset is used for training and evaluating the traffic scene generation models.",
          "quote": "To test the performance of our flows on this task, we train them to generate a scene of cars in the INTERACTION dataset [40], conditioned on a rendered image of the drivable area y."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "INTERACTION Dataset: An INTERnational, Adversarial and Cooperative moTION Dataset in Interactive Driving Scenarios with Semantic Maps",
          "justification": "The dataset is used for training and evaluating the traffic scene generation models.",
          "quote": "To test the performance of our flows on this task, we train them to generate a scene of cars in the INTERACTION dataset [40], conditioned on a rendered image of the drivable area y."
        }
      },
      {
        "name": {
          "value": "CLEVR dataset",
          "justification": "The CLEVR dataset is used for the bounding box prediction experiments.",
          "quote": "We begin with a subset of the CLEVR dataset only containing three objects."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "CLEVR: A Diagnostic Dataset for Compositional Language and Elementary Visual Reasoning",
          "justification": "The CLEVR dataset is used for the bounding box prediction experiments.",
          "quote": "We begin with a subset of the CLEVR dataset only containing three objects."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "torchdiffeq",
          "justification": "The paper relies on torchdiffeq for solving ordinary differential equations, which is crucial for their continuous normalizing flows.",
          "quote": "We use the adaptive solver of Dormand and Prince of order 4 to solve the ODE [10]. To calculate the gradients of the ODE with respect to its parameters we use the adjoint method [6] ... This functionality is all available in the torchdiffeq package [5]."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Neural Ordinary Differential Equations",
          "justification": "The paper relies on torchdiffeq for solving ordinary differential equations, which is crucial for their continuous normalizing flows.",
          "quote": "We use the adaptive solver of Dormand and Prince of order 4 to solve the ODE [10]. To calculate the gradients of the ODE with respect to its parameters we use the adjoint method [6] ... This functionality is all available in the torchdiffeq package [5]."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 3009,
    "prompt_tokens": 32368,
    "total_tokens": 35377
  }
}