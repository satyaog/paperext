{
  "paper": "2312.14836.txt",
  "words": 7638,
  "extractions": {
    "title": {
      "value": "Learning Lagrangian Multipliers for the Travelling Salesman Problem",
      "justification": "The title is clearly mentioned at the top of the paper and in the header.",
      "quote": "Learning Lagrangian Multipliers for the Travelling Salesman Problem"
    },
    "description": "The paper proposes an unsupervised learning approach using graph neural networks to efficiently generate Lagrangian multipliers for the Held-Karp relaxation in the Travelling Salesman Problem, aiming to provide tighter dual bounds and improve the performance of branch-and-bound algorithms.",
    "type": {
      "value": "Empirical Study",
      "justification": "The paper includes experimental results and empirical validation of the proposed approach across various distributions of the metric travelling salesman problem.",
      "quote": "We conduct experiments across various distributions of the metric travelling salesman problem, considering instances with up to 200 cities."
    },
    "primary_research_field": {
      "name": {
        "value": "Combinatorial Optimization",
        "justification": "The primary focus of the paper is on optimizing the Travelling Salesman Problem, which falls under Combinatorial Optimization.",
        "quote": "Lagrangian relaxation is a versatile mathematical technique employed to relax constraints in an optimization problem..."
      },
      "aliases": []
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Graph Neural Networks",
          "justification": "The paper uses graph neural networks as a core component for predicting Lagrangian multipliers.",
          "quote": "we propose an innovative unsupervised learning approach that harnesses the capabilities of graph neural networks to exploit the problem structure."
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Constraint Programming",
          "justification": "The paper aims to improve constraint propagation and filtering in a branch-and-bound algorithm through Held-Karp relaxation.",
          "quote": "These bounds are subsequently utilized to enhance the filtering process carried out by branch-and-bound algorithms."
        },
        "aliases": []
      },
      {
        "name": {
          "value": "Travelling Salesman Problem",
          "justification": "The specific combinatorial optimization problem addressed in the paper is the Travelling Salesman Problem.",
          "quote": "We apply this technique to the well-known Held-Karp Lagrangian relaxation for the travelling salesman problem."
        },
        "aliases": [
          "TSP"
        ]
      }
    ],
    "models": [
      {
        "name": {
          "value": "Graph Attention Network (GAT)",
          "justification": "The paper employs a variant of the graph attention network to handle features on edges for predicting Lagrangian multipliers.",
          "quote": "Our model is based on the edge-featured graph attention network which is a variant of the well-known graph attention network"
        },
        "aliases": [
          "GAT"
        ],
        "is_contributed": {
          "value": 0,
          "justification": "The Graph Attention Network is a well-established model and was not introduced in this paper.",
          "quote": "Our model is based on the edge-featured graph attention network"
        },
        "is_executed": {
          "value": 1,
          "justification": "The model was executed as part of the experimental evaluation procedures described in the paper.",
          "quote": "The empirical results on different configurations of the TSP showed that the learning component can significantly improve the algorithm."
        },
        "is_compared": {
          "value": 0,
          "justification": "The focus was on demonstrating the application and improvement using the proposed approach rather than making direct numerical comparisons with other deep learning models.",
          "quote": "Unlike the previous experiments, it provides insights about the robustness of the method."
        },
        "referenced_paper_title": {
          "value": "The graph neural network model",
          "justification": "The referenced paper provides the foundational details on the graph attention network model.",
          "quote": "Our model is based on the edge-featured graph attention network (Wang, Chen, and Chen 2021) which is a variant of the well-known graph attention network (Veličković et al. 2018) dedicated to handle features on the edges."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Random100",
          "justification": "Random100 is mentioned as one of the datasets used for evaluation in the experiments.",
          "quote": "Random100 (and 200): the cities (100 or 200) are uniformly generated in the [0, 1]2 plan."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "The Traveling Salesman Problem: A Computational Study",
          "justification": "The paper referred to is foundational in establishing benchmark datasets and methods for TSP.",
          "quote": "Applegate et al. 2006"
        }
      },
      {
        "name": {
          "value": "Random200",
          "justification": "Random200 is mentioned as one of the datasets used for evaluation in the experiments.",
          "quote": "Random100 (and 200): the cities (100 or 200) are uniformly generated in the [0, 1]2 plan."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "The Traveling Salesman Problem: A Computational Study",
          "justification": "The paper referred to is foundational in establishing benchmark datasets and methods for TSP.",
          "quote": "Applegate et al. 2006"
        }
      },
      {
        "name": {
          "value": "Clustered100",
          "justification": "Clustered100 is mentioned as one of the datasets used for evaluation in the experiments.",
          "quote": "Clustered100 (and 200): inspired by Fischetti and Toth (1989), five clusters are uniformly generated in the [0, 1]2 plan."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "An additive bounding procedure for combinatorial optimization problems",
          "justification": "The paper referred to is foundational in evaluating clustered datasets for TSP.",
          "quote": "inspired by Fischetti and Toth (1989)"
        }
      },
      {
        "name": {
          "value": "Clustered200",
          "justification": "Clustered200 is mentioned as one of the datasets used for evaluation in the experiments.",
          "quote": "Clustered100 (and 200): inspired by Fischetti and Toth (1989), five clusters are uniformly generated in the [0, 1]2 plan."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "An additive bounding procedure for combinatorial optimization problems",
          "justification": "The paper referred to is foundational in evaluating clustered datasets for TSP.",
          "quote": "inspired by Fischetti and Toth (1989)"
        }
      },
      {
        "name": {
          "value": "Hard",
          "justification": "Hard is mentioned as one of the datasets used for evaluation in the experiments.",
          "quote": "Hard: introduced by Hougardy and Zhong (2021), these 50 instances ranging from 52 to 199 cities have been generated to have a large integrality gap and are provably hard to solve for branch-and-bound methods."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Hard to solve instances of the Euclidean Traveling Salesman Problem",
          "justification": "The paper referred to discusses instances that have a large integrality gap and are difficult for branch-and-bound methods.",
          "quote": "Hougardy and Zhong (2021)"
        }
      },
      {
        "name": {
          "value": "Concorde",
          "justification": "Concorde is mentioned as the state-of-the-art TSP solver, and its results are used as references.",
          "quote": "The primal bound is 2% above the optimal solution cost computed with Concorde (Applegate et al. 2006)."
        },
        "aliases": [],
        "role": "Referenced",
        "referenced_paper_title": {
          "value": "The Traveling Salesman Problem: A Computational Study",
          "justification": "The referenced paper introduces Concorde as a computationally efficient TSP solver.",
          "quote": "Applegate et al. 2006"
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "Pytorch",
          "justification": "Pytorch was used in the implementation of the graph neural network model for this research.",
          "quote": "The graph neural network has been implemented with deep graph library (Wang et al. 2019a) and Pytorch (Paszke et al. 2019)."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Pytorch: An imperative style, high-performance deep learning library",
          "justification": "The paper details the use of Pytorch which is a high-performance deep learning library.",
          "quote": "(Paszke et al. 2019)."
        }
      },
      {
        "name": {
          "value": "Deep Graph Library (DGL)",
          "justification": "DGL was also used in the implementation of the graph neural network model for this research.",
          "quote": "The graph neural network has been implemented with deep graph library (Wang et al. 2019a) and Pytorch (Paszke et al. 2019)."
        },
        "aliases": [
          "DGL"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks",
          "justification": "The paper provides a reference for the use and implementation details of DGL.",
          "quote": "(Wang et al. 2019a)."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1750,
    "prompt_tokens": 14086,
    "total_tokens": 15836
  }
}