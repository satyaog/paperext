{
  "paper": "2312.10717.txt",
  "words": 6722,
  "extractions": {
    "title": {
      "value": "Pseudo-random Instance Generators in C++ for Deterministic and Stochastic Multi-commodity Network Design Problems",
      "justification": "The paper's title is clearly stated at the beginning of the document and encapsulates the main focus of the research.",
      "quote": "Pseudo-random Instance Generators in C++ for Deterministic and Stochastic Multi-commodity Network Design Problems"
    },
    "description": "This paper introduces two flexible, high-speed pseudo-random instance generators designed for simulating a variety of deterministic and stochastic multi-commodity network design problems (MCFNDPs). By facilitating systematic experimentation with new and larger sets of instances, these generators aim to improve the assessment of the performance achieved by exact and heuristic solution methods. The paper details the design, functionalities, and usage of these generators, with emphasis on enhancing reproducibility and comparability in published research.",
    "type": {
      "value": "empirical study",
      "justification": "The paper focuses on introducing practical tools (pseudo-random instance generators) and evaluates their performance through systematic experimentation, which aligns with empirical study characteristics.",
      "quote": "We hope that by facilitating systematic experimentation with new and larger sets of instances, these generators will lead to more thorough assessments and comparisons of the performance achieved by exact and heuristic solution methods in deterministic and stochastic settings."
    },
    "primary_research_field": {
      "name": {
        "value": "Operations Research",
        "justification": "The research primarily addresses combinatorial optimization problems within operations research, specifically focusing on network design problems.",
        "quote": "Network design problems constitute an important family of combinatorial optimization problems for which numerous exact and heuristic algorithms have been developed over the last few decades."
      },
      "aliases": [
        "OR",
        "Combinatorial Optimization"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Stochastic Programming",
          "justification": "One of the primary topics discussed is the generation and testing of stochastic models for network design, which falls under stochastic programming.",
          "quote": "A central focus is the stochastic counterpart, the two-stage MCFNDP with recourse."
        },
        "aliases": [
          "Stochastic Optimization"
        ]
      },
      {
        "name": {
          "value": "Network Design",
          "justification": "The primary subject of the paper revolves around multi-commodity network design problems (MCFNDPs), both deterministic and stochastic.",
          "quote": "Network design problems constitute an important family of combinatorial optimization problems."
        },
        "aliases": [
          "Network Optimization"
        ]
      }
    ],
    "models": [],
    "datasets": [],
    "libraries": [
      {
        "name": {
          "value": "PCG",
          "justification": "The paper mentions using the PCG C++ library for pseudo-random number generation, highlighting its efficiency and reliability.",
          "quote": "A modest diﬀerence between the original Fortran code and our C++ version of the Mulgen generator consists in the use of a modern pseudo-random number generation library. The PCG (i.e., “permuted congruential generator”) C++ library (see O’Neill, 2023; Lemire, 2023) is faster, statistically more reliable and more convenient."
        },
        "aliases": [
          "PCG Library"
        ],
        "role": "used",
        "referenced_paper_title": {
          "value": "PCG, a family of better random number generators",
          "justification": "This is the key reference work for the PCG library mentioned in the paper.",
          "quote": "The PCG (i.e., “permuted congruential generator”) C++ library (see O’Neill, 2023; Lemire, 2023) is faster, statistically more reliable and more convenient."
        }
      },
      {
        "name": {
          "value": "CPLEX",
          "justification": "The paper uses the CPLEX solver for testing the feasibility of scenarios generated.",
          "quote": "The feasibility of each scenario returned by the HKW algorithm is tested by verifying with the CPLEX solver if a solution to the second stage problem exists under the given scenario when all arcs are open."
        },
        "aliases": [
          "IBM ILOG CPLEX"
        ],
        "role": "used",
        "referenced_paper_title": {
          "value": "",
          "justification": "While the reference paper for IBM ILOG CPLEX was not explicitly mentioned, CPLEX is a well-known optimization solver.",
          "quote": ""
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 980,
    "prompt_tokens": 12980,
    "total_tokens": 13960
  }
}