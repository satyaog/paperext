{
  "paper": "2212.11451.txt",
  "words": 11483,
  "extractions": {
    "title": {
      "value": "A machine learning framework for neighbor generation in metaheuristic search",
      "justification": "This is the title explicitly mentioned at the beginning of the paper.",
      "quote": "A machine learning framework for neighbor generation in metaheuristic search"
    },
    "description": "This paper presents a machine learning framework that integrates machine learning techniques into metaheuristic methods for solving combinatorial optimization problems. The framework focuses on generating promising neighbors by selecting subsets of variables using classification tasks that learn from structural characteristics and high-quality solutions. The methodology is validated on two metaheuristic applications: a Tabu Search scheme for Wireless Network Optimization and a Large Neighborhood Search heuristic for Mixed-Integer Programs.",
    "type": {
      "value": "Empirical Study",
      "justification": "The paper includes empirical evaluations of the proposed framework on two specific case studies: Wireless Network Optimization and Mixed-Integer Programs, demonstrating its applicability and performance.",
      "quote": "We validate our methodology on two metaheuristic applications: a Tabu Search scheme for solving a Wireless Network Optimization problem and a Large Neighborhood Search heuristic for solving Mixed-Integer Programs."
    },
    "primary_research_field": {
      "name": {
        "value": "Metaheuristics",
        "justification": "The main focus of the paper is on enhancing metaheuristic methods for combinatorial optimization through the integration of machine learning.",
        "quote": "This paper presents a methodology for integrating machine learning techniques into metaheuristics for solving combinatorial optimization problems."
      },
      "aliases": [
        "Metaheuristics"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Combinatorial Optimization",
          "justification": "The paper deals specifically with solving combinatorial optimization problems through improved metaheuristic approaches.",
          "quote": "Combinatorial Optimization (CO) is an important class of optimization problems in Operations Research (OR) and Computer Science."
        },
        "aliases": [
          "Combinatorial Optimization"
        ]
      },
      {
        "name": {
          "value": "Machine Learning",
          "justification": "The paper incorporates machine learning techniques to improve the performance of metaheuristic search methods.",
          "quote": "Machine Learning (ML) to extract structural properties of the problem from data and automatically produce learning-based MH strategies."
        },
        "aliases": [
          "Machine Learning"
        ]
      }
    ],
    "models": [
      {
        "name": {
          "value": "Graph Neural Networks (GNN)",
          "justification": "The paper explicitly mentions the use of Graph Neural Networks for representing and learning from the problem structures.",
          "quote": "Graph Neural Networks (GNNs) are developed to process data that are naturally representable with graphs."
        },
        "aliases": [
          "GNN"
        ],
        "is_contributed": {
          "value": 0,
          "justification": "GNNs are utilized in the framework, but they are not a novel contribution of this paper.",
          "quote": "Graph Neural Networks (GNNs) are developed to process data that are naturally representable with graphs."
        },
        "is_executed": {
          "value": 1,
          "justification": "The experimental results section indicates that the algorithms involving GNNs were executed to validate the methodology.",
          "quote": "We validated our methodology on two metaheuristic applications: a Tabu Search scheme for solving a Wireless Network Optimization problem and a Large Neighborhood Search heuristic for solving MIPs."
        },
        "is_compared": {
          "value": 1,
          "justification": "The paper compares the results of metaheuristic applications using GNN models with other strategies.",
          "quote": "The experimental results show that our approach is able to achieve a satisfactory trade-off between the exploration of a larger solution space and the exploitation of high-quality solution regions on both applications."
        },
        "referenced_paper_title": {
          "value": "Exact combinatorial optimization with graph convolutional neural networks",
          "justification": "A relevant paper where GNNs were used for a similar combinatorial optimization scenario is referenced in the context of modeling combinatorial optimization problems.",
          "quote": "For instance, a network optimization problem can be naturally modeled by a graph and a generic MIP instance can also be represented into a bipartite graph [7]."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "MIPLIB",
          "justification": "MIPLIB is explicitly mentioned as a source for MIP instances used in the experiments.",
          "quote": "MIPLIB [30] dataset"
        },
        "aliases": [
          "MIPLIB"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "MIPLIB 2017: data-driven compilation of the 6th mixed-integer programming library",
          "justification": "The reference title matches the dataset mentioned in the study.",
          "quote": "We have considered 126 MIP instances taken from the MIPLIB [30] dataset."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "PyTorch",
          "justification": "PyTorch is mentioned as the library used for implementing and training the GNN models.",
          "quote": "Our code is written in Python 3.9 and we use Pytorch 1.60 [24] for implementing and training the GNNs."
        },
        "aliases": [
          "Pytorch"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "PyTorch: An imperative style, high-performance deep learning library",
          "justification": "The referenced paper outlines the library used, i.e., PyTorch.",
          "quote": "Our code is written in Python 3.9 and we use Pytorch 1.60 [24] for implementing and training the GNNs."
        }
      },
      {
        "name": {
          "value": "PySCIPOpt",
          "justification": "PySCIPOpt is used for solving MIPs in the experiments.",
          "quote": "We use PySCIPOpt 3.1.1 [32], SCIP 7.01 [31] for developing our models and solving MIPs."
        },
        "aliases": [
          "PySCIPOpt"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "PySCIPOpt: Mathematical programming in Python with the SCIP optimization suite",
          "justification": "This is the title of the reference paper for the PySCIPOpt library used in the research.",
          "quote": "We use PySCIPOpt 3.1.1 [32], SCIP 7.01 [31] for developing our models and solving MIPs."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1179,
    "prompt_tokens": 17852,
    "total_tokens": 19031
  }
}