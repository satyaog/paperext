{
  "paper": "2305.01206.txt",
  "words": 11629,
  "extractions": {
    "title": {
      "value": "Chronosymbolic Learning: Efficient CHC Solving with Symbolic Reasoning and Inductive Learning",
      "justification": "It is the exact title given at the beginning of the provided research paper.",
      "quote": "Chronosymbolic Learning:\nEfficient CHC Solving with\nSymbolic Reasoning and Inductive Learning"
    },
    "description": "This paper introduces Chronosymbolic Learning, a novel framework that integrates symbolic reasoning techniques with inductive learning methods to solve Constrained Horn Clauses (CHCs) more efficiently. Experimental results show that their proposed tool outperforms state-of-the-art CHC solvers on a set of benchmarks.",
    "type": {
      "value": "empirical",
      "justification": "The paper presents a new framework, implements it, and provides empirical results showing its efficacy compared to existing methods.",
      "quote": "our tool performs considerably better even without careful tuning for each CHC instance. In the Chronosymbolic-cover setting, our approach shows significant improvements, emphasizing the need for tailored strategies for different instances."
    },
    "primary_research_field": {
      "name": {
        "value": "Automated Reasoning",
        "justification": "The paper focuses on solving Constrained Horn Clauses (CHCs) using both symbolic reasoning and data-driven inductive learning techniques, which are central to the domain of Automated Reasoning.",
        "quote": "To enhance CHC solving without the laborious task of manual heuristic\ncreation and tuning, data-driven approaches demonstrate significant potential by extracting crucial patterns from a small set of data points."
      },
      "aliases": [
        "Automated Theorem Proving",
        "Formal Verification"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Constraint Solving",
          "justification": "The paper deals specifically with solving Constrained Horn Clauses (CHCs), which is a topic within the broader field of Constraint Solving.",
          "quote": "Constrained Horn Clauses (CHCs), a fragment of First Order Logic (FOL), naturally capture the discovery and verification of inductive invariants"
        },
        "aliases": [
          "CHC Solving"
        ]
      },
      {
        "name": {
          "value": "Machine Learning",
          "justification": "The paper integrates machine learning techniques for inductive learning as part of its framework.",
          "quote": "Instead of combining these two mechanically or parallelly, our method makes the reasoner and learner mutually benefit from each other"
        },
        "aliases": [
          "Inductive Learning"
        ]
      },
      {
        "name": {
          "value": "Program Verification",
          "justification": "The paper mentions the application of CHC solving to various software verification tasks.",
          "quote": "CHCs serve as a general format for program safety verification."
        },
        "aliases": [
          "Software Verification"
        ]
      }
    ],
    "models": [
      {
        "name": {
          "value": "Chronosymbolic Learning",
          "justification": "Chronosymbolic Learning is the primary model introduced in the paper.",
          "quote": "Solving Constrained Horn Clauses (CHCs) is a fundamental challenge behind a wide range of verification and analysis tasks. In this work, we develop a simple but effective framework, Chronosymbolic Learning, which unifies symbolic information and numerical data to solve a CHC system efficiently."
        },
        "aliases": [
          "Chronosymbolic Framework"
        ],
        "is_contributed": {
          "value": 1,
          "justification": "The model is newly introduced and presented as a contribution in the paper.",
          "quote": "In this work, we develop a simple but effective\nframework, Chronosymbolic Learning, which unifies symbolic information and numerical data to solve a CHC system efficiently."
        },
        "is_executed": {
          "value": 1,
          "justification": "The model is executed on various test benchmarks to demonstrate its efficacy.",
          "quote": "Main Contributions [...] Lastly, the main experimental results demonstrate the effectiveness and robustness of our tool."
        },
        "is_compared": {
          "value": 1,
          "justification": "The model is compared to several state-of-the-art CHC solvers in the experimental results section.",
          "quote": "Our experiments, conducted on 288 commonly used arithmetic CHC benchmarks, reveal that our tool outperforms several state-of-the-art CHC solvers"
        },
        "referenced_paper_title": {
          "value": "N/A",
          "justification": "There is no prior specific reference paper for this model as it is introduced in this paper.",
          "quote": "N/A"
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "N/A",
          "justification": "The specific datasets used in the experiments are not explicitly named or given unique identifiers.",
          "quote": "Benchmarks. Our benchmarking dataset comprises a collection of widely-used arithmetic CHC benchmarks from related works [12, 14, 17] and SV-COMP, collected by FreqHorn [14]."
        },
        "aliases": [],
        "role": "used",
        "referenced_paper_title": {
          "value": "Benchmarks for Arithmetic CHC Solvers",
          "justification": "The benchmarks are mentioned to be collected from various related works and SV-COMP.",
          "quote": "Benchmarks. Our benchmarking dataset comprises a collection of widely-used arithmetic CHC benchmarks from related works [12, 14, 17] and SV-COMP, collected by FreqHorn [14]."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "Microsoft Z3",
          "justification": "Microsoft Z3 is used as the backend SMT solver in their framework.",
          "quote": "Our artifact implementing Chronosymbolic Learning is built in Python 3.10 and utilizes Microsoft Z3 [11] version 4.8.11.0 as the backend SMT solver."
        },
        "aliases": [
          "Z3"
        ],
        "role": "used",
        "referenced_paper_title": {
          "value": "Z3: An efficient SMT solver",
          "justification": "The library is referenced with a citation to its original paper.",
          "quote": "Our artifact implementing Chronosymbolic Learning is built in Python 3.10 and utilizes Microsoft Z3 [11] version 4.8.11.0 as the backend SMT solver."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1137,
    "prompt_tokens": 19864,
    "total_tokens": 21001
  }
}