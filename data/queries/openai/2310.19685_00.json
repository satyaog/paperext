{
  "paper": "2310.19685.txt",
  "words": 2996,
  "extractions": {
    "title": {
      "value": "DGFN: Double Generative Flow Networks",
      "justification": "This is the original title of the paper provided.",
      "quote": "DGFN: Double Generative Flow Networks"
    },
    "description": "This paper introduces double GFlowNets (DGFNs), which employ a target network inspired by Double Deep Q-Learning to enhance exploration in Generative Flow Networks (GFNs). The empirical results show improved exploration efficiency in sparse reward domains, particularly in drug discovery tasks.",
    "type": {
      "value": "Empirical Study",
      "justification": "The paper presents empirical results from applying DGFNs to two benchmark tasks: hypergrid and molecule generation.",
      "quote": "Empirical results confirm that DGFNs effectively enhance exploration in sparse reward domains and high-dimensional state spaces, both challenging aspects of de-novo design in drug discovery."
    },
    "primary_research_field": {
      "name": {
        "value": "Drug Discovery using Deep Learning",
        "justification": "The primary application discussed in the paper is drug discovery using deep learning approaches, specifically Generative Flow Networks.",
        "quote": "Deep learning is emerging as an effective tool in drug discovery, with potential applications in both predictive and generative models."
      },
      "aliases": [
        "Drug Discovery",
        "Deep Learning in Drug Discovery"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Generative Flow Networks",
          "justification": "The paper focuses extensively on Generative Flow Networks (GFNs) and their enhancement through double GFlowNets (DGFNs).",
          "quote": "We begin by introducing GFlowNets, following previous work [2, 8]."
        },
        "aliases": [
          "GFNs",
          "Generative Flow Net",
          "Double GFlowNets"
        ]
      },
      {
        "name": {
          "value": "Reinforcement Learning",
          "justification": "The methodological inspiration from Double Deep Q-Learning places the paper in the context of reinforcement learning.",
          "quote": "We take inspiration from the double deep Q-learning (DDQN) algorithm from reinforcement learning [14], and introduce double GFlowNets (DGFNs)."
        },
        "aliases": [
          "RL",
          "DDQN",
          "Double Deep Q-Learning"
        ]
      }
    ],
    "models": [
      {
        "name": {
          "value": "Double Generative Flow Networks (DGFNs)",
          "justification": "The primary model introduced and evaluated in the paper is Double Generative Flow Networks.",
          "quote": "In this work, we introduce double GFlowNets (DGFNs)."
        },
        "aliases": [
          "DGFNs",
          "Double GFlowNets"
        ],
        "is_contributed": {
          "value": 1,
          "justification": "The main contribution of the paper is the introduction of DGFNs.",
          "quote": "In this work, we introduce double GFlowNets (DGFNs)."
        },
        "is_executed": {
          "value": 1,
          "justification": "The paper provides empirical results from executing DGFNs in various tasks.",
          "quote": "Our empirical findings demonstrate that DGFNs finds all modes faster in hypergrid, and uncover a greater number of high-reward modes in the fragment-based molecular design task."
        },
        "is_compared": {
          "value": 1,
          "justification": "The performance of DGFNs is compared with conventional GFlowNets in the results.",
          "quote": "We study the performance of the proposed DGFNs in comparison to conventional GFlowNets with different objective functions on two benchmark tasks: hypergrid and molecule generation."
        },
        "referenced_paper_title": {
          "value": "",
          "justification": "There is no specific referenced paper mentioned as the origin of DGFNs since it is introduced in this paper.",
          "quote": ""
        }
      },
      {
        "name": {
          "value": "Generative Flow Networks (GFlowNets/GFNs)",
          "justification": "Generative Flow Networks is a key model discussed in the paper and forms the basis for DGFNs.",
          "quote": "Generative Flow Networks (GFlowNets/GFNs) are a recently introduced method recognized for the ability to generate diverse candidates, in particular in small molecule generation tasks."
        },
        "aliases": [
          "GFNs",
          "GFlowNets"
        ],
        "is_contributed": {
          "value": 0,
          "justification": "The paper builds on existing work on GFlowNets.",
          "quote": "Despite existing research on credit assignment for GFlowNets, a central challenge continues to be the improvement of exploration and exploitation within the GFlowNets framework."
        },
        "is_executed": {
          "value": 1,
          "justification": "Generative Flow Networks are executed as a baseline for comparison with DGFNs.",
          "quote": "We study the performance of the proposed DGFNs in comparison to conventional GFlowNets with different objective functions on two benchmark tasks: hypergrid and molecule generation."
        },
        "is_compared": {
          "value": 1,
          "justification": "GFlowNets are used as a comparison model to evaluate DGFNs' performance.",
          "quote": "We study the performance of the proposed DGFNs in comparison to conventional GFlowNets with different objective functions on two benchmark tasks: hypergrid and molecule generation."
        },
        "referenced_paper_title": {
          "value": "Flow Network based Generative Models for Non-Iterative Diverse Candidate Generation",
          "justification": "The referenced paper for GFlowNets is cited in the context of building upon existing work.",
          "quote": "In recent years, a promising alternative approach has emerged in the form of Generative Flow Networks (GFlowNets) [2,3]."
        }
      },
      {
        "name": {
          "value": "Double Deep Q-Learning (DDQN)",
          "justification": "The paper draws methodological inspiration from Double Deep Q-Learning to introduce DGFNs.",
          "quote": "We take inspiration from the double deep Q-learning (DDQN) algorithm from reinforcement learning [14], and introduce double GFlowNets (DGFNs)."
        },
        "aliases": [
          "DDQN",
          "Double DQN"
        ],
        "is_contributed": {
          "value": 0,
          "justification": "The paper does not contribute DDQN but rather uses it as an inspiration.",
          "quote": "We take inspiration from the double deep Q-learning (DDQN) algorithm from reinforcement learning [14], and introduce double GFlowNets (DGFNs)."
        },
        "is_executed": {
          "value": 0,
          "justification": "DDQN is not executed in this paper; it is referenced for methodological purposes.",
          "quote": ""
        },
        "is_compared": {
          "value": 0,
          "justification": "DDQN is not directly compared; it serves as an inspiration for the methodology.",
          "quote": ""
        },
        "referenced_paper_title": {
          "value": "Deep Reinforcement Learning with Double Q-learning",
          "justification": "This is the referenced paper for the original DDQN algorithm.",
          "quote": "Double Deep Q-Networks (DDQN) were introduced to mitigate this issue, by decoupling action selection and value estimation [15]."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Hypergrid Environment",
          "justification": "The hypergrid environment is used as a benchmark task in the experiments.",
          "quote": "We apply DGFNs to two standard GFN tasks: hypergrid (where the complexity and sparsity can be controlled well) and small molecule generation (which is more illustrative of real applications) [2]."
        },
        "aliases": [
          "Hypergrid"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Flow Network based Generative Models for Non-Iterative Diverse Candidate Generation",
          "justification": "This is the referenced paper for the original introduction of the hypergrid environment.",
          "quote": "In the synthetic hypergrid environment introduced by Bengio et al. [2], the goal is to sample trajectories in a D-dimensional grid-world with side length H."
        }
      },
      {
        "name": {
          "value": "Molecule Synthesis Dataset",
          "justification": "This dataset is used for the small molecule generation task in the experiments.",
          "quote": "To assess the capabilities of DGFNs for drug discovery, we conduct experiments involving the generation of small molecules."
        },
        "aliases": [
          "Small Molecule Dataset"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Flow Network based Generative Models for Non-Iterative Diverse Candidate Generation",
          "justification": "The referenced paper for the molecule synthesis task is cited as the source of the dataset and proxy model.",
          "quote": "In our experiments, we used the dataset and proxy model provided by Bengio et al. [2]."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "RDKit",
          "justification": "RDKit is used for cheminformatics routines in the experiments.",
          "quote": "Additionally, we incorporated the AutoDock Vina library [13] for binding energy estimation and relied on the RDKit library [6] for chemistry routines."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "RDKit: Open-source cheminformatics",
          "justification": "This is the primary reference for the RDKit library.",
          "quote": "[6] Greg Landrum. RDkit: Open-source cheminformatics. 2006. Google Scholar, 2006."
        }
      },
      {
        "name": {
          "value": "AutoDock Vina",
          "justification": "AutoDock Vina is used for binding energy estimation in the molecule synthesis task.",
          "quote": "Additionally, we incorporated the AutoDock Vina library [13] for binding energy estimation."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "AutoDock Vina: improving the speed and accuracy of docking with a new scoring function, efficient optimization and multithreading",
          "justification": "This is the primary reference for the AutoDock Vina library.",
          "quote": "[13] Oleg Trott and Olson Arthur. AutoDock Vina: improving the speed and accuracy of docking with a new scoring function, efficient optimization and multithreading. Inc. J Comput Chem 2010, January 2010."
        }
      },
      {
        "name": {
          "value": "Optuna",
          "justification": "Optuna is used for hyperparameter tuning in the experiments.",
          "quote": "Hyperparameter tuning was conducted via Optuna [1], which automates hyperparameter optimization with Ray Tune [9]."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Optuna: A Next-generation Hyperparameter Optimization Framework",
          "justification": "This is the primary reference for the Optuna library.",
          "quote": "[1] Takuya Akiba, Shotaro Sano, Toshihiko Yanase, Takeru Ohta, and Masanori Koyama. Optuna: A Next-generation Hyperparameter Optimization Framework. arXiv e-prints, page arXiv:1907.10902, July 2019."
        }
      },
      {
        "name": {
          "value": "Ray Tune",
          "justification": "Ray Tune is used for automating hyperparameter optimization along with Optuna.",
          "quote": "Hyperparameter tuning was conducted via Optuna [1], which automates hyperparameter optimization with Ray Tune [9]."
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Ray: A Distributed Framework for Emerging AI Applications",
          "justification": "This is the primary reference for the Ray Tune library.",
          "quote": "[9] Philipp Moritz, Robert Nishihara, Stephanie Wang, Alexey Tumanov, Richard Liaw, Eric Liang, Melih Elibol, Zongheng Yang, William Paul, Michael I. Jordan, and Ion Stoica. Ray: A Distributed Framework for Emerging AI Applications. arXiv e-prints, page arXiv:1712.05889, December 2017."
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 2761,
    "prompt_tokens": 6157,
    "total_tokens": 8918
  }
}