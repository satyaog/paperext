{
  "paper": "2204.09122.txt",
  "words": 6404,
  "extractions": {
    "title": {
      "value": "Continuous cutting plane algorithms in integer programming",
      "justification": "It is the title at the top of the research paper.",
      "quote": "Continuous cutting plane algorithms in integer programming"
    },
    "description": "The paper proposes an alternative method for finding cutting planes in mixed-integer linear programs (MILPs) by reframing the problem as a continuous optimization problem. It uses neural networks to optimize a set of inequalities, referred to as the subadditive primal problem of the MILP. The paper introduces a two-step algorithm for this purpose and shows empirical gains over traditional methods.",
    "type": {
      "value": "Empirical Study",
      "justification": "The paper introduces a new algorithm and demonstrates empirical gains through experiments.",
      "quote": "To do so, we propose a concrete two-step algorithm, and demonstrate empirical gains when optimizing generalized Gomory mixed-integer inequalities over various classes of MILPs."
    },
    "primary_research_field": {
      "name": {
        "value": "Optimization",
        "justification": "The paper focuses on optimization problems, specifically mixed-integer linear programs (MILPs), and introduces new methods for finding cutting planes.",
        "quote": "Cutting planes for mixed-integer linear programs (MILPs) are typically computed in rounds by iteratively solving optimization problems, the so-called separation."
      },
      "aliases": [
        "MILP Optimization"
      ]
    },
    "sub_research_fields": [
      {
        "name": {
          "value": "Mathematical Optimization",
          "justification": "The paper involves the mathematical optimization techniques used to solve MILPs.",
          "quote": "A mixed-integer linear programming (MILP) problem is an optimization problem of the form"
        },
        "aliases": [
          "Math Optimization",
          "Mathematical Programming"
        ]
      },
      {
        "name": {
          "value": "Machine Learning",
          "justification": "The paper interprets the problem in the context of optimizing a neural network, bridging it with machine learning concepts.",
          "quote": "This problem can also be interpreted as optimizing a neural network to solve an optimization problem over subadditive functions, which we call the subadditive primal problem of the MILP."
        },
        "aliases": [
          "ML"
        ]
      }
    ],
    "models": [
      {
        "name": {
          "value": "Generalized Gomory Mixed-Integer Inequalities",
          "justification": "The model used in the paper is Generalized Gomory mixed-integer inequalities.",
          "quote": "Experiments show that this approach can find cuts leading to better dual bounds than the classical approach, although the computational cost of this search does not, for the moment, make it competitive compared with these classical methods."
        },
        "aliases": [
          "GMI Inequalities"
        ],
        "is_contributed": {
          "value": 0,
          "justification": "The Generalized Gomory mixed-integer inequalities are used but not contributed by the paper.",
          "quote": "In this paper, we propose an alternative approach to computing good cuts. Instead of devising an algorithm that produces good cuts by construction, we propose to consider a large parametrized family of inequalities that are valid by construction, but search among them for the best cuts."
        },
        "is_executed": {
          "value": 1,
          "justification": "The model is executed as part of the empirical evaluation in the paper.",
          "quote": "Experiments show that this approach can find cuts leading to better dual bounds than the classical approach."
        },
        "is_compared": {
          "value": 1,
          "justification": "The Generalized Gomory mixed-integer inequalities are compared to classical methods in the experiments.",
          "quote": "Experiments show that this approach can find cuts leading to better dual bounds than the classical approach"
        },
        "referenced_paper_title": {
          "value": "An algorithm for the mixed integer problem",
          "justification": "Generalized Gomory mixed-integer inequalities are based on Gomory's (1960) algorithm for the mixed integer problem.",
          "quote": "One example is provided by Gomory mixed-integer (GMI) inequalities [3]."
        }
      }
    ],
    "datasets": [
      {
        "name": {
          "value": "Ecole (Set Covering, Combinatorial Auctions, Maximum Independent Set and Capacitated Facility Location)",
          "justification": "The datasets used in the experiments are from the Ecole library.",
          "quote": "For our first experiment, we evaluate on 4 benchmarks: 100 randomly generated minimum set covering, combinatorial auctions, maximum independent set and capacitated facility location instances, that were generated using the Ecole python library [13]"
        },
        "aliases": [
          "Ecole Datasets"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Ecole: A Gym-like library for machine learning in combinatorial optimization solvers",
          "justification": "The datasets are generated using the Ecole python library, referenced in the paper.",
          "quote": "For our first experiment, we evaluate on 4 benchmarks: 100 randomly generated minimum set covering, combinatorial auctions, maximum independent set and capacitated facility location instances, that were generated using the Ecole python library [13]"
        }
      },
      {
        "name": {
          "value": "2-matching",
          "justification": "Twenty-two 2-matching instances derived from TSPLIB are used in the second experiment.",
          "quote": "We evaluated on 12 2-matching [18] instances derived from TSPLIB [19]"
        },
        "aliases": [],
        "role": "Used",
        "referenced_paper_title": {
          "value": "TSPLIB â€“ A traveling salesman problem library",
          "justification": "The 2-matching instances are derived from TSPLIB, which is appropriately referenced.",
          "quote": "We evaluated on 12 2-matching [18] instances derived from TSPLIB [19]"
        }
      },
      {
        "name": {
          "value": "MIPLIB3",
          "justification": "Small instances from MIPLIB3 are used in the second experiment.",
          "quote": "We now turn to our second experiment. In this scenario, we evaluated on 12 2-matching [18] instances derived from TSPLIB [19] and 18 small instances taken from MIPLIB3 [20]."
        },
        "aliases": [
          "MIPLIB"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "An updated mixed integer programming library: MIPLIB 3.0",
          "justification": "The small instances used in the experiments are from MIPLIB3, appropriately referenced.",
          "quote": "We now turn to our second experiment. In this scenario, we evaluated on 12 2-matching [18] instances derived from TSPLIB [19] and 18 small instances taken from MIPLIB3 [20]."
        }
      }
    ],
    "libraries": [
      {
        "name": {
          "value": "Pytorch",
          "justification": "Pytorch was used for automatic differentiation in the implementation.",
          "quote": "For our first experiment, we evaluate on 4 benchmarks: 100 randomly generated minimum set covering, combinatorial auctions, maximum independent set and capacitated facility location instances, that were generated using the Ecole python library [13]"
        },
        "aliases": [
          "Pytorch"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Pytorch: An imperative style, high-performance deep learning library",
          "justification": "The library used for automatic differentiation in the implementation is Pytorch, appropriately referenced.",
          "quote": "The experiments were run on Intel Xeon W-2145 3.70GHz CPU cores and a NVIDIA Titan RTX GPU."
        }
      },
      {
        "name": {
          "value": "Gurobi",
          "justification": "Gurobi was used as the LP solver and for computing optimal MILP values.",
          "quote": "We used Gurobi 9.1.1 [12] as LP solver, as well as for computing optimal MILP values for comparisons1"
        },
        "aliases": [
          "Gurobi Optimizer"
        ],
        "role": "Used",
        "referenced_paper_title": {
          "value": "Gurobi Optimizer Reference Manual",
          "justification": "The library used as the LP solver and for computing optimal MILP values is Gurobi, appropriately referenced.",
          "quote": "We used Gurobi 9.1.1 [12] as LP solver, as well as for computing optimal MILP values for comparisons1"
        }
      }
    ]
  },
  "usage": {
    "completion_tokens": 1547,
    "prompt_tokens": 11989,
    "total_tokens": 13536
  }
}