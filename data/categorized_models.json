{
  "algorithms": {
    "federated learning": {
      "fedfish": {}
    },
    "optimizer": {
      "a2cid2": {},
      "ad-psgd": {},
      "adam": {},
      "adam+cm": {},
      "adaptive-\u03b7": {},
      "ar": {},
      "bidirectional learning for model-based biological sequence design (bib)": {},
      "byol": {},
      "cadet": {},
      "clipped-sgd": {
        "clipped-sgda": {
          "dprox-clipped-sgda-shift": {}
        },
        "dprox-clipped-sgd-shift": {}
      },
      "clipped-sstm": {
        "dprox-clipped-sstm-shift": {}
      },
      "conformalized quantile regression (cqr)": {},
      "connectivity-based fine-tuning (cbft)": {},
      "contrastive retrospection (conspec)": {},
      "dynamic learning algorithm for fairness in kidney exchange": {},
      "ego (energy-based object-centric learning)": {},
      "erm": {},
      "gradient masked averaging (gma)": {},
      "group-dro (distributionally robust optimization)": {},
      "improved learning algorithm for optimized operations": {},
      "infonce": {},
      "jumbot": {},
      "kema (kernel manifold alignment)": {},
      "lead": {},
      "lead (least action dynamics)": {},
      "llf (later-layer-forgetting)": {},
      "llms (linear least mean squares) estimator": {},
      "magnetic mirror descent": {
        "magnetic mirror descent (mmd)": {}
      },
      "mali (manifold alignment with label information)": {},
      "metaoptnet": {},
      "mpot": {},
      "multistep-sam": {},
      "online projected equality-constrained newton method (open-m)": {},
      "open-set likelihood optimization (oslo)": {},
      "proposed neural network for lyapunov function and policy learning": {},
      "prototypical contrastive learning (pcl v1)": {},
      "residual gradient algorithms": {},
      "sam": {},
      "se": {},
      "signsgd": {},
      "simclr": {
        "simclrv2": {
          "simclr v2": {}
        }
      },
      "stochastic accelerated gradient-extragradient (ag-eg)": {
        "acceleratedgradient-optimisticgradient (ag-og) descent ascent": {
          "acceleratedgradient-optimisticgradient (ag-og)": {}
        }
      },
      "stochastic polyak stepsize (sps)": {},
      "stochastic surrogate optimization (sso)": {},
      "supervised contrastive learning (supcon)": {},
      "swav": {},
      "switched least squares method": {},
      "vicreg": {},
      "\u03b7\u03c8-learning": {}
    },
    "other algorithms": {
      "(ia)3": {},
      "action limited pretraining (alpt)": {},
      "asam": {},
      "autofuzz": {},
      "barlow twins": {},
      "bayesian persuasion": {},
      "best-of-n sampling (bon)": {},
      "bm25": {},
      "byol+sem": {},
      "byz-vr-marina": {},
      "ceag (constrained excess accuracy gaps)": {},
      "clipped-seg": {
        "dprox-clipped-seg-shift": {}
      },
      "cluster-focal": {},
      "cnaps": {},
      "crosssplit": {},
      "deep magic": {},
      "deup": {},
      "energy-based models (ebms)": {},
      "equilibrium propagation": {},
      "erm (empirical risk minimization)": {},
      "extragradient method (eg)": {
        "extragradient method": {}
      },
      "feta": {},
      "forward-forward (ff) algorithm": {},
      "fused": {},
      "gibbs sampling": {},
      "goat": {},
      "gradient-guided nested sampling": {},
      "groupdro-model": {},
      "heat geodesic embedding": {},
      "ibc": {},
      "jeffrey's rule": {},
      "joint-cbm": {},
      "laplacian anomaly detection (lad)": {
        "multi-view laplacian anomaly detection (multilad)": {}
      },
      "larousse": {},
      "loco": {},
      "lookbehind-sam": {},
      "maml": {},
      "maximum covering (mc) model": {},
      "metadata archaeology via probe dynamics (map-d)": {},
      "minimum variance unbiased mechanism": {
        "interpolated minimum variance unbiased mechanism": {}
      },
      "mixed-variable pso": {},
      "mixture of experts (moe)": {},
      "moco": {
        "moco v2": {}
      },
      "mosaiks": {},
      "multi-head routing (mhr)": {
        "mhr (multi-head routing)": {}
      },
      "neural graphical model (ngm)": {},
      "neural likelihood estimation (nle)": {},
      "neural posterior estimation (npe)": {},
      "neural ratio estimation (nre)": {},
      "off-belief learning (obl)": {},
      "optimistic gradient method": {
        "optimistic gradient method (og)": {}
      },
      "orbgrand": {},
      "packnet": {},
      "papa": {
        "papa-all": {
          "papa-2": {}
        }
      },
      "pet": {},
      "phate": {},
      "plyds": {},
      "polychord": {},
      "proximal point (pp) method": {
        "proximal point method (pp)": {}
      },
      "r-u-sure": {},
      "rainproof": {},
      "redo (recycling dormant neurons)": {},
      "reptile": {},
      "retro*": {},
      "revbayes": {},
      "rule-based proactive contact tracing (pct) algorithm": {},
      "score-based likelihood characterization (slic)": {},
      "seal (simulated annealing in early layers)": {},
      "sgrand": {
        "list-grand": {}
      },
      "skellam mechanism": {},
      "sne": {},
      "softseg": {},
      "spare": {},
      "t-sne": {},
      "thompson sampling based algorithm (net-tsde)": {},
      "topological value iteration": {
        "extra-topological value iteration": {
          "extra-intra-topological value iteration": {
            "langevin monte carlo least-squares value iteration": {}
          }
        }
      },
      "transfer entropy bottleneck (teb)": {},
      "tri-mentoring": {},
      "value iteration": {},
      "vanilla conformal prediction (vanilla cp)": {
        "feature conformal prediction (feature cp)": {}
      },
      "wake-sleep": {},
      "weighted finite automata (wfa)": {},
      "windowed scattering transform": {
        "non-windowed scattering transform": {}
      }
    },
    "reinforcement learning": {
      "3rl": {},
      "action limited pretraining": {},
      "actor-critic": {
        "actor-critic (ac)": {},
        "advantage actor critic (a2c)": {},
        "robust-multi-agent attention actor-critic": {},
        "soft actor-critic": {
          "soft actor critic": {},
          "soft actor-critic (sac)": {
            "soft actor critic (sac)": {}
          }
        },
        "stochastic marginal actor-critic": {}
      },
      "alphazero": {
        "alphafold2": {}
      },
      "awac": {},
      "bbf": {},
      "bcq": {},
      "behavior cloning (bc)": {},
      "conditional policy": {
        "goal-conditioned policy": {}
      },
      "conditionally optimistic exploration (coe)": {},
      "counterfactual regret minimization (cfr)": {},
      "covering options": {},
      "cross-risk minimization (xrm)": {},
      "deep deterministic policy gradient (ddpg)": {},
      "deep homomorphic policy gradient (dhpg)": {},
      "director": {},
      "disagreement": {},
      "dqn": {},
      "dreamerv2": {
        "dreamer-v3": {}
      },
      "dyna-mpc": {},
      "eigenoptions": {},
      "emc": {},
      "experience replay (er)": {},
      "forward backward rl (fbrl)": {},
      "heterogeneous crowds using parametric reinforcement learning (hop-rl)": {},
      "horizon": {},
      "hyperzero": {},
      "impala": {},
      "independent ppo": {
        "independent ppo (ippo)": {
          "multi-agent ppo": {
            "multi-agent ppo (mappo)": {
              "multi-agent ppo (ma-ppo)": {}
            }
          },
          "multi-timescale ppo (mtppo)": {}
        }
      },
      "inverse dynamics model": {
        "inverse dynamics model (idm)": {},
        "koopman-based dynamics model": {}
      },
      "inverse reinforcement learning (irl)": {},
      "iqn": {},
      "iris": {},
      "labeled real-time dynamic-programming": {},
      "latent model-based rl": {},
      "leap": {},
      "mappo": {},
      "maximum a posteriori policy optimization (mpo)": {},
      "medal": {},
      "meta policy": {},
      "mico": {},
      "minimal value-equivalent partial models": {},
      "minimal value-equivalent partial models (mveps)": {},
      "minimax exploiter": {},
      "moma-ppo": {},
      "monte carlo learning": {},
      "nash-md": {
        "nash-ema-pg": {},
        "nash-md-pg": {}
      },
      "object-centric general value functions (oc-gvfs)": {},
      "option keyboard": {},
      "orbit": {},
      "pearl": {},
      "periodic reencoding": {},
      "plan2explore (p2e)": {},
      "planet": {},
      "ppo": {},
      "predictive avoidance model (pam)": {},
      "prototype-sample relation distillation (prd)": {},
      "q-learning": {
        "conservative q learning (cql)": {
          "conservative q-learning (cql)": {}
        },
        "deep q-learning": {
          "batch-constrained deep q-learning (bcq)": {}
        },
        "double gumbel q-learning": {},
        "implicit q learning (iql)": {},
        "independent q-learning (iql)": {},
        "minimax q-learning": {},
        "multi-timescale q-learning (mtql)": {},
        "pt-q-learning": {},
        "pt-td learning": {},
        "soft q-learning (sql)": {}
      },
      "qmix": {},
      "qr-dqn": {},
      "quantile dynamic programming (qdp)": {},
      "r3l": {},
      "rainbow": {},
      "rb-tsde": {},
      "recall to imagine (r2i)": {},
      "reciprocal velocity obstacles (rvo)": {},
      "rectification": {},
      "recurrent deep reinforcement learning agents": {},
      "reinforce": {},
      "residual policy": {},
      "risc (reset free rl with intelligently switching controller)": {
        "reset free rl with intelligently switching controller (risc)": {}
      },
      "rvs": {},
      "sac": {},
      "safn": {},
      "sale": {},
      "sender-receiver lewis game": {},
      "skipper": {},
      "sofe (stationary objectives for exploration)": {},
      "sr-spr": {},
      "stable estimator of dynamic systems (seds)": {},
      "stateful active facilitator": {},
      "stateful active facilitator (saf)": {},
      "subtb (subtrajectory balance)": {},
      "target networks (tn)": {},
      "td3": {},
      "td3+bc": {},
      "td7": {},
      "temporal difference (td) learning": {
        "quantile temporal-difference learning (qtd)": {},
        "temporal difference (td)": {}
      },
      "thinker": {},
      "torque-based deep reinforcement learning policy": {},
      "twin-delayed ddpg": {
        "twin delayed ddpg (td3)": {}
      },
      "vaprl": {},
      "visual-imitation with reinforcement learning (virl)": {},
      "\u03b4-model": {}
    }
  },
  "classic_ml": {
    "adaboost": {},
    "bayes classifier": {},
    "bayesian hierarchical model": {},
    "canonical correlation analysis (cca)": {},
    "conditional random field (crf)": {},
    "crfbased model": {},
    "criticsmc": {},
    "decision tree": {
      "decision trees": {}
    },
    "gaussian processes (gp)": {},
    "hidden markov models (hmms)": {},
    "lasso regression": {
      "inner-lasso": {}
    },
    "linear discriminant analysis classifier": {},
    "logistic regression": {},
    "lssa": {},
    "partial least squares correlation (plsc)": {},
    "partial least squares regression (plsr)": {},
    "random forest": {
      "deep forest": {}
    },
    "sample boosting algorithm (samba)": {},
    "support vector machine": {
      "svm": {
        "ocsvm": {}
      },
      "svms": {}
    },
    "xgboost": {}
  },
  "ignore": {
    "[18f]track": {},
    "adam langevin monte carlo deep q-network": {},
    "astrophot": {},
    "balanced-model": {},
    "ball-and-stick model": {},
    "bamquery": {},
    "baseline-model": {},
    "boost": {
      "gapboost": {}
    },
    "catch": {},
    "cifar10 small.onnx": {},
    "cigale": {},
    "clean": {},
    "coop-cbm": {},
    "deepjanus": {},
    "deeppatch": {},
    "deepshap": {},
    "deepsolar": {},
    "differentiable indirection": {},
    "distributional evidence": {},
    "docml": {},
    "elo score": {},
    "ertrl": {},
    "fedavg": {},
    "fedncm": {},
    "functional regularization (fr)": {},
    "gen-neg": {},
    "generalized gomory mixed-integer inequalities": {},
    "gpt-neo": {},
    "growth function (gf) model": {},
    "hamper": {},
    "large language models": {},
    "medal-adr": {},
    "moleculenet": {},
    "moleculestm": {},
    "nps (neural production systems)": {},
    "parti": {},
    "prospector": {},
    "protseed": {},
    "pytorch": {},
    "raptor": {},
    "scrutinai": {},
    "source only": {},
    "structure discovery from interventions (sdi)": {},
    "supervised": {},
    "tensorflow": {},
    "trakem2": {},
    "unityeyes model": {},
    "vector quantization (vq)": {
      "dynamic vector quantization (dvq)": {}
    },
    "virtual evidence": {},
    "wide neural networks": {},
    "workload prediction model using eeg": {},
    "zonation 5": {}
  },
  "neural networks": {
    "abnet": {},
    "attention network": {
      "cmab": {},
      "matching networks": {},
      "mhr-z": {},
      "oc-gvfs": {},
      "ram-mil": {
        "bayes-mil": {}
      },
      "reusable slotwise mechanisms (rsm)": {},
      "rsm": {},
      "sa-mesh": {},
      "slot attention": {
        "disentangled slot attention": {}
      }
    },
    "autoencoder": {
      "art": {},
      "cluster-specific autoencoder": {},
      "dagmm": {},
      "dasvdd": {},
      "deep set prediction networks": {},
      "general autoencoder": {},
      "goku-ui": {},
      "hausdorff factorized support (hfs)": {},
      "sunmask": {},
      "variational autoencoder (vae)": {
        "iodine": {},
        "monet": {},
        "variational auto-encoder with arbitrary conditioning (vaeac)": {},
        "variational autoencoders (vaes)": {},
        "vits (variational inference with adversarial learning for end-to-end text-to-speech)": {}
      },
      "\u03b2-vae": {}
    },
    "bayesian network": {
      "bayesian nested neural network (bn3)": {},
      "bayesian neural network (bnn)": {
        "bayesian neural networks (bnns)": {}
      },
      "bcd-nets": {},
      "dibs": {},
      "multi-headed bayesian deep learning probabilistic model": {}
    },
    "boltzmann machine": {},
    "canonicalization network (cn)": {
      "cn(p4)-cnn": {}
    },
    "complex": {},
    "contrastive predictive coding (cpc)": {},
    "convolutional neural network": {
      "resnet": {
        "drn-22-d": {},
        "injective resnet": {},
        "residual networks (he et al., 2016)": {},
        "residual networks (resnet-20)": {},
        "resnet": {},
        "resnet-18": {},
        "resnet-20": {},
        "resnet-50": {
          "swav+sem": {}
        },
        "resnet-56": {},
        "resnet9": {}
      },
      "very deep convolutional networks": {
        "vgg": {},
        "vgg-11": {},
        "vgg-13": {},
        "vgg-16": {}
      },
      "alexnet": {},
      "big-transfer (bit)": {},
      "cnn": {},
      "cnn-lstm": {},
      "cnns": {},
      "cnns (cnns)": {},
      "convlstm": {
        "drc": {}
      },
      "convnext": {},
      "da wand": {},
      "deep q-network (dqn)": {
        "deep q network": {
          "deep q networks (dqn)": {}
        },
        "deep q-networks (dqn)": {},
        "double deep q-network (double dqn)": {}
      },
      "deep4net": {},
      "deepcluster-v2": {},
      "deeplabv3": {},
      "densenet-121": {},
      "drqv2": {},
      "eegnet": {},
      "efficientnet": {},
      "faster r-cnn": {
        "mask r-cnn": {}
      },
      "film": {},
      "g-cnns": {
        "g-cnn (p4, =params)": {}
      },
      "gampen": {},
      "gtm-decon": {},
      "hubert": {
        "distilhubert": {}
      },
      "hyena": {
        "hyenadna": {},
        "laughinghyena": {}
      },
      "ieconv": {},
      "inception-88": {
        "inception-v3": {}
      },
      "lenet": {},
      "lenet-5": {},
      "mcan": {},
      "mobilenet": {
        "mobilenetv2": {}
      },
      "muzero": {
        "efficientzero": {}
      },
      "perceiverio": {},
      "point2component": {},
      "schnet": {
        "schnet 9m": {}
      },
      "sct_deepseg_sc": {},
      "shallownet": {},
      "spr": {},
      "squeezenet": {},
      "tcn-eeg": {},
      "u-net": {
        "cnn u-net": {},
        "probabilistic unet (vnd-punet)": {},
        "st-slidr": {}
      },
      "u-paint": {}
    },
    "cox model": {},
    "danns": {},
    "deep neural networks": {},
    "diffusion model": {
      "[sf]2 m": {},
      "cdiff": {},
      "cdm": {},
      "ctg": {},
      "dall-e 2": {},
      "denoising diffusion probability models": {
        "denoising diffusion probabilistic models": {}
      },
      "diffpack": {},
      "diffpret": {},
      "diffusion tensor imaging (dti)": {},
      "diffusion time estimation": {},
      "diffusionitm": {},
      "djinn": {},
      "ghost-on-the-shell (g-shell)": {},
      "glide": {},
      "graphically structured diffusion model (gsdm)": {},
      "imagen": {},
      "latent diffusion goal conditioning": {
        "latent diffusion-constrained q-learning": {}
      },
      "merlin": {},
      "meshdiffusion": {},
      "midjourney": {},
      "motif": {},
      "mudiff": {},
      "score-based generative models": {},
      "score-based models": {},
      "siamdiff": {},
      "stable diffusion": {},
      "str2str": {}
    },
    "dyrep": {},
    "equivariant mesh neural network (emnn)": {},
    "euclidnet": {},
    "gapmtnn": {},
    "generative adversarial network": {
      "ba3us": {
        "ba 3 us": {}
      },
      "causal adversarial perturbation": {},
      "dp-gan": {},
      "energy-based gans": {},
      "gan": {},
      "generative adversarial networks (gans)": {},
      "get3d": {},
      "hologan": {},
      "maximum entropy gan (megan)": {},
      "moleculesde": {},
      "mutual information minimization gan (mimgan)": {},
      "pada": {},
      "privgan": {},
      "sp-gan": {},
      "ta-cyclegan": {},
      "task-assisted generative adversarial network (ta-gan)": {},
      "wasserstein gans": {},
      "\u03b3-model": {}
    },
    "generative flow networks": {
      "adversarial flow networks (aflownets)": {},
      "diffusion generative flow sampler (dgfs)": {},
      "dynamic gflownet (dyngfn)": {},
      "dyngfn": {},
      "expected flow networks (eflownets)": {},
      "forward-looking generative flow networks": {
        "forward-looking gflownets (fl-gfn)": {}
      },
      "gaflownet": {},
      "generative augmented flow networks (gaflownet)": {},
      "generative flow network": {},
      "generative flow network (gflownet)": {},
      "generative flow networks (gflownet)": {},
      "generative flow networks (gfns)": {},
      "geophy": {},
      "gflownet": {},
      "gflownet-al (mogfn-al)": {},
      "gflownet-em": {},
      "gflownets": {},
      "gflownets (generative flow networks)": {},
      "gflowout": {},
      "id-gflowout": {},
      "jsp-gfn (joint structure and parameters gflownet)": {},
      "logit-scaling gflownets": {},
      "maximum entropy generative flow networks": {},
      "mogfn-al": {},
      "mrbayes": {},
      "multi-objective gflownet (mogfn)": {},
      "multi-objective gflownets (mogfns)": {},
      "notears": {},
      "outcome-conditioned generative flow network": {},
      "phylogfn": {},
      "pinsage": {},
      "preference-conditional gflownet (mogfn-pc)": {},
      "preference-conditional gflownets (mogfn-pc)": {},
      "quantile matching (qm) gflownet": {},
      "quantile matching gflownet": {},
      "stochastic gflownets": {
        "stochastic gflownet": {}
      },
      "vaiphy": {}
    },
    "graph neural network": {
      "deepfri": {},
      "delta-ai": {},
      "dimenet": {
        "dimenet++": {}
      },
      "e3bind": {},
      "egnn": {},
      "equibind": {},
      "faenet": {},
      "forcenet": {},
      "fusionretro": {},
      "g4satbench": {},
      "gatedgcn": {},
      "gcn": {},
      "gearnet": {
        "gearnet-edge-ieconv": {},
        "gearnet-ieconv": {}
      },
      "gearnet-edge": {},
      "gemnet": {},
      "genstat": {},
      "geossl": {
        "geossl-ddm": {}
      },
      "ghn-3": {},
      "gin": {},
      "glem": {},
      "gnn": {},
      "gnns": {},
      "gnns (gnns)": {},
      "gps++": {},
      "graph convolutional networks (gcn)": {
        "auto-grouping graph convolutional network (ag-gcn)": {},
        "simplified graph convolution (sgc)": {}
      },
      "graph fourier mmd (gfmmd)": {},
      "graph isomorphism network": {},
      "graph isomorphism network (gin)": {},
      "graph positional and structural encoder (gpse)": {},
      "graphretrieval": {},
      "graphsage": {},
      "gvp": {},
      "ig-rl": {},
      "imcat": {},
      "instruction pointer attention gnn (ipa-gnn)": {},
      "lightgcn": {},
      "mujam": {},
      "nbfnet": {},
      "nequip": {},
      "one-4-all (o4a)": {},
      "painn": {},
      "pna": {},
      "regulatory temporal interaction network inference (ritini)": {},
      "rglight": {},
      "segnn": {},
      "setfit": {},
      "signed laplacian gnn (slgnn)": {},
      "steps": {},
      "tfn": {},
      "ultra": {},
      "vbpi-gnn": {}
    },
    "hierarchical predictive coding model": {},
    "mixture density network (mdn)": {},
    "msn": {},
    "multi layer perceptron": {
      "aircraft performance fnn": {},
      "allegro": {},
      "deepfm": {},
      "doc2vec": {
        "dev2vec:apis": {
          "dev2vec:issues": {},
          "dev2vec:repos": {},
          "dev2vec:rias": {}
        }
      },
      "feedforward neural network (fnn)": {
        "deep feed-forward neural network": {}
      },
      "fully-connected relu networks": {
        "fully-connected relu network": {}
      },
      "hypercombinator": {},
      "mlp": {},
      "mlp-mixer": {},
      "mnistfc 256x4": {
        "mnistfc 256x6": {}
      },
      "movie recommender": {},
      "multi-layer perceptron": {},
      "multi-layer perceptron (mlp)": {},
      "multi-layer perceptrons (mlps)": {},
      "multilayer perceptron": {},
      "overfitcolor": {},
      "overfitsdf": {},
      "physics-informed neural networks": {},
      "point2uv": {},
      "siamlip": {},
      "two-layer neural network": {},
      "wing anti-icing performance fnn": {}
    },
    "neural network": {
      "deep sets": {},
      "proto-value networks (pvns)": {},
      "protonet": {},
      "simplicial embeddings (sem)": {}
    },
    "neural ode": {
      "neurallog": {},
      "neuralodes": {}
    },
    "neural processes": {
      "cfm": {},
      "cmanp": {},
      "latent bottlenecked attentive neural processes (lbanps)": {}
    },
    "neural radiance fields": {},
    "neuralsym": {},
    "normalizing flow": {
      "argmaxar": {},
      "cnf": {},
      "conditional flow matching": {},
      "conditional permutation invariant flow": {},
      "conditional permutation invariant flows": {},
      "flow matching": {},
      "neural fim": {},
      "normalizing flows": {},
      "optimal transport conditional flow matching": {},
      "ot-cfm": {},
      "population monte carlo with normalizing flow (nf-pmc)": {}
    },
    "pbgnet": {},
    "pmsn": {},
    "proto-value networks (pvn)": {},
    "realnvp": {},
    "recurrent neural network": {
      "colei": {},
      "continuous-time rnn": {},
      "deeplog": {},
      "gated recurrent unit": {
        "gru": {},
        "maven": {}
      },
      "itra": {},
      "long short term memory": {
        "lstm": {}
      },
      "recurrent inference machine (rim)": {},
      "recurrent neural networks": {},
      "recurrent neural networks (rnn)": {},
      "rnn": {},
      "second-order recurrent neural networks (2-rnn)": {},
      "standard rnn": {}
    },
    "satnet": {},
    "sem-il": {},
    "sparse neural network": {
      "discrete key-value bottleneck": {},
      "optfeature": {}
    },
    "spherenet": {},
    "structured state spaces": {
      "s4 (structured state space sequence model)": {
        "s4-pooler": {}
      }
    },
    "tankbind": {},
    "temporal koopman networks": {},
    "transformer": {
      "generative pre-trained transformer": {
        "chatgpt": {},
        "dialoggpt": {},
        "gpt": {},
        "gpt-2": {
          "distilgpt2": {},
          "gpt (gpt-2)": {},
          "gpt-4": {},
          "grover": {}
        },
        "gpt-2 xl": {},
        "gpt-3": {},
        "gpt-3.5": {
          "gpt-3.5 turbo": {
            "gpt-3.5-turbo": {}
          }
        },
        "gpt-j 6b": {},
        "gpt-j-6b": {},
        "gpt-xl": {},
        "instructgpt": {}
      },
      "vision transformer": {
        "climax": {},
        "clip vit-l": {
          "clip \ud83d\ude80 (clip rocket)": {}
        },
        "crossvivit": {
          "multi-quantile crossvivit": {}
        },
        "deit-base": {
          "deit-large": {}
        },
        "dino": {
          "trex-dino": {}
        },
        "hiformer": {},
        "i-jepa": {},
        "masked siamese networks (msn)": {
          "prior matching for siamese networks (pmsn)": {}
        },
        "segment anything model (sam)": {},
        "vit": {},
        "vit-b": {},
        "vit-b/16": {},
        "vit-h": {},
        "vits": {}
      },
      "afriteva v2": {},
      "albef": {},
      "alpaca (7b)": {},
      "balaur": {},
      "bart": {},
      "bert": {
        "albert": {},
        "bert-base": {},
        "bertoverflow": {},
        "bertsumext": {},
        "codebert": {},
        "convbert": {},
        "distilbert": {},
        "graphcodebert": {},
        "hubert": {
          "distilhubert": {}
        },
        "multilingual dense passage retriever (mdpr)": {},
        "protbert": {},
        "protbert-bfd": {},
        "pubmedbert": {},
        "roberta": {
          "distilroberta": {},
          "neat": {},
          "roberta-base": {},
          "roberta-large": {},
          "xlm-roberta": {}
        },
        "sorbetmatcher": {},
        "toxbuster": {},
        "vilbert": {}
      },
      "big-g": {
        "big-g sparse": {}
      },
      "block-state transformer": {
        "block-state transformer (bst)": {}
      },
      "bloom": {
        "bloom-7b": {}
      },
      "ca-sum": {},
      "causalvul": {},
      "charlm": {},
      "chemrlformer": {},
      "claude-2": {},
      "clip": {},
      "code-cushman-001": {},
      "codegen": {},
      "codex": {},
      "conformer": {},
      "contriever + atlas": {
        "contriever + flan-t5": {}
      },
      "copilot": {},
      "dart": {},
      "data2vec": {},
      "decision transformer": {
        "decision transformer (dt)": {}
      },
      "decoder-only transformer with absolute position embedding (ape)": {},
      "decoder-only transformer with alibi": {},
      "decoder-only transformer with rotary": {},
      "decoder-only transformer without positional encoding (nope)": {},
      "detr": {},
      "dinov2": {
        "dinosaur": {}
      },
      "dlinear": {},
      "dln-1": {},
      "dln-2": {},
      "dpr + fid": {},
      "dramatron": {},
      "ego": {},
      "equiformer": {},
      "esm-2": {
        "esm-1b": {}
      },
      "flan-palm": {},
      "flan-t5": {
        "qa4coi": {}
      },
      "flava": {},
      "gfetm": {},
      "grit": {},
      "guilget": {},
      "hyperformer": {},
      "incoder": {},
      "itit": {},
      "knn-lm": {},
      "llama": {
        "honeybee": {},
        "llama (7b, 13b, 30b)": {},
        "llama-7b": {},
        "vicuna": {}
      },
      "llarp": {},
      "logsy": {},
      "longformer": {},
      "lora": {},
      "m oqagpt": {},
      "mad-x": {},
      "make-a-scene": {},
      "mapl": {},
      "mcan": {},
      "mesh (minimize entropy of sinkhorn)": {},
      "mhr-\u00b5": {},
      "minilm": {},
      "mpnet": {},
      "mpt-7b, mpt-7b-instruct": {},
      "muformer": {},
      "multi-omic transformer (mot)": {},
      "multi-resolution time-series transformer (mtst)": {},
      "opt": {
        "opt-1.3b": {
          "opt-125m": {}
        }
      },
      "palm2": {},
      "patchtst": {},
      "pegasus": {},
      "perceiverio": {},
      "polytropon (poly)": {},
      "poyo-1": {
        "poyo-mp": {}
      },
      "pre-lm": {},
      "prompt proposal classifier (ppc)": {},
      "protst": {},
      "realm": {},
      "s weet": {},
      "satlas (swin-v2 transformer)": {},
      "satmae": {},
      "sepformer": {},
      "sf-gen": {},
      "skillqg": {},
      "slate": {
        "t-phate": {}
      },
      "slotformer": {},
      "starcoder": {
        "starcoderbase": {}
      },
      "swin transformer v2": {},
      "switchformer": {},
      "t5": {
        "byt5": {},
        "mt5": {},
        "t5-base": {
          "decoder-only transformer with t5's relative position embedding": {},
          "mt5-base": {
            "mt5-base+presence": {},
            "mt5-large+presence": {}
          }
        }
      },
      "tactis": {
        "tactis-2": {}
      },
      "transformer (6-layer)": {},
      "transformer neural processes (tnps)": {
        "efficient query transformer neural processes (eqtnps)": {}
      },
      "transformer-based energy model": {},
      "transformers": {},
      "universal transformer (ut)": {
        "sparse universal transformer (sut)": {}
      },
      "unixcoder": {},
      "vanilla transformers (vt)": {},
      "wav2vec 2.0": {},
      "wavlm": {},
      "xlm-r": {
        "afroxlm-r": {}
      }
    }
  },
  "others": {
    "a*net": {},
    "dynesty": {},
    "e-prop": {},
    "lave": {},
    "mixup": {
      "mixupe": {}
    },
    "rotate": {}
  }
}