title:
  value: Tree Cross Attention
  justification: The title 'Tree Cross Attention' accurately represents the core contribution of the paper, which is to introduce
    Tree Cross Attention (TCA) as a more efficient alternative to traditional Cross Attention.
  quote: T REE C ROSS ATTENTION Frederick Tung Borealis AI frederick.tung@borealisai.com
description: This paper introduces Tree Cross Attention (TCA) and ReTreever, with TCA being a scalable and token-efficient
  alternative to Cross Attention by organizing data in a tree structure and performing tree-based search during inference.
  ReTreever, leveraging TCA, shows significant improvements in token efficiency and performance across various tasks compared
  to established models like Perceiver IO.
type:
  value: empirical
  justification: The paper is based on empirical results demonstrated through experiments on classification and uncertainty
    estimation tasks.
  quote: We evaluate across various classification and uncertainty prediction tasks, showing (1) TCA achieves performance
    comparable to Cross Attention while being significantly more token efficient and (2) ReTreever outperforms Perceiver IO
    while using the same number of tokens for inference.
primary_research_field:
  name:
    value: Deep Learning
    justification: The paper focuses on developing and improving models and mechanisms within the scope of deep learning.
    quote: With the rapid growth in applications of machine learning, an important objective is to make inference efficient
      both in terms of compute and memory.
  aliases: []
sub_research_fields:
- name:
    value: Attention Mechanisms
    justification: The core contribution is an improvement upon Cross Attention mechanisms.
    quote: In this work, we propose Tree Cross Attention (TCA), a token-efficient variant of Cross Attention.
  aliases: []
- name:
    value: Optimization
    justification: The primary focus is on making inference more efficient in terms of processing time and memory usage.
    quote: In this work, we propose Tree Cross Attention (TCA) - a module based on Cross Attention that only retrieves information
      from a logarithmic O(log(N )) number of tokens for performing inference.
  aliases: []
models:
- name:
    value: Perceiver IO
    justification: Perceiver IO is referenced for comparison purposes to show the efficiency and performance of ReTreever
      and TCA.
    quote: "Perceiver IO\u2019s performance for the same number of tokens was dismal (15.2 \xB1 0.0% accuracy at N = 256),\
      \ further dropping in performance as the length of the sequence increased."
  aliases: []
  is_contributed:
    value: false
    justification: Role:['contributed', 'used', 'referenced']
    quote: referenced
  is_executed:
    value: true
    justification: ModelMode:['trained', 'fine-tuned', 'inference']
    quote: inference
  is_compared:
    value: true
    justification: ''
    quote: ''
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: ReTreever
    justification: ReTreever leverages Tree Cross Attention for token-efficient inference, introduced in the paper.
    quote: Leveraging TCA, we introduce ReTreever, a flexible architecture for token-efficient inference.
  aliases: []
  is_contributed:
    value: true
    justification: Role:['contributed', 'used', 'referenced']
    quote: contributed
  is_executed:
    value: true
    justification: ModelMode:['trained', 'fine-tuned', 'inference']
    quote: inference
  is_compared:
    value: true
    justification: ''
    quote: ''
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
datasets:
- name:
    value: CelebA
    justification: CelebA dataset is used for Image Completion tasks to benchmark ReTreever's performance.
    quote: Results. In Table 3, we see that ReTreever outperforms Perceiver IO significantly on both CelebA and EMNIST while
      using the same number of tokens.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: Copy Task
    justification: The Copy Task is used to benchmark the efficiency of Tree Cross Attention by testing token retrieval.
    quote: To tackle those objectives, we consider benchmarks for classification (Copy Task, Human Activity) and uncertainty
      estimation settings (GP Regression and Image Completion).
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: EMNIST
    justification: EMNIST dataset is also used for Image Completion tasks to evaluate and compare performance.
    quote: Results. In Table 3, we see that ReTreever outperforms Perceiver IO significantly on both CelebA and EMNIST while
      using the same number of tokens.
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: GP Regression
    justification: GP Regression is used for evaluating the performance of ReTreever in uncertainty estimation settings.
    quote: To tackle those objectives, we consider benchmarks for classification (Copy Task, Human Activity) and uncertainty
      estimation settings (GP Regression and Image Completion).
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: Image Completion
    justification: GP Regression is used for evaluating the performance of ReTreever in uncertainty estimation settings.
    quote: To tackle those objectives, we consider benchmarks for classification (Copy Task, Human Activity) and uncertainty
      estimation settings (GP Regression and Image Completion).
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: Human Activity
    justification: The Human Activity dataset is utilized for evaluating performance on time series classification tasks.
    quote: To tackle those objectives, we consider benchmarks for classification (Copy Task, Human Activity) and uncertainty
      estimation settings (GP Regression and Image Completion).
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
libraries:
- name:
    value: PyTorch
    justification: PyTorch is the deep learning library used for implementing the models and conducting experiments.
    quote: Our Perceiver IO baseline is based on the popular Perceiver (IO) repository (https://github.com/lucidrains/perceiver-pytorch/blob/main/perceiver
      pytorch/perceiver pytorch.py).
  aliases: []
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: TNP
    justification: ''
    quote: For the experiments on uncertainty estimation, we use the official repositories for TNPs (https://github.com/tung-nd/TNP-pytorch)
      and LBANPs (https://github.com/BorealisAI/latent- bottlenecked-anp).
  aliases:
  - TNP-pytorch
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: LBANP
    justification: ''
    quote: For the experiments on uncertainty estimation, we use the official repositories for TNPs (https://github.com/tung-nd/TNP-pytorch)
      and LBANPs (https://github.com/BorealisAI/latent- bottlenecked-anp).
  aliases:
  - latent- bottlenecked-anp
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
- name:
    value: Perceiver
    justification: ''
    quote: Our Perceiver IO baseline is based on the popular Perceiver (IO) repository (https://github.com/lucidrains/perceiver-
      pytorch/blob/main/perceiver pytorch/perceiver pytorch.py).
  aliases:
  - perceiver_pytorch
  role: used
  referenced_paper_title:
    value: ''
    justification: ''
    quote: ''
